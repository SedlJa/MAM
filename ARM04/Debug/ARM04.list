
ARM04.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001664  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000124  080017f8  080017f8  000027f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800191c  0800191c  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  0800191c  0800191c  0000291c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001924  08001924  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001924  08001924  00002924  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001928  08001928  00002928  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  0800192c  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000160  2000005c  08001988  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001bc  08001988  000031bc  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00003464  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000df3  00000000  00000000  000064f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000003f8  00000000  00000000  000072e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000002ea  00000000  00000000  000076e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000140a9  00000000  00000000  000079ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000042d6  00000000  00000000  0001ba73  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0007e8b9  00000000  00000000  0001fd49  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0009e602  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000106c  00000000  00000000  0009e648  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005d  00000000  00000000  0009f6b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	2000005c 	.word	0x2000005c
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080017e0 	.word	0x080017e0

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000060 	.word	0x20000060
 80001d0:	080017e0 	.word	0x080017e0

080001d4 <__aeabi_uldivmod>:
 80001d4:	b953      	cbnz	r3, 80001ec <__aeabi_uldivmod+0x18>
 80001d6:	b94a      	cbnz	r2, 80001ec <__aeabi_uldivmod+0x18>
 80001d8:	2900      	cmp	r1, #0
 80001da:	bf08      	it	eq
 80001dc:	2800      	cmpeq	r0, #0
 80001de:	bf1c      	itt	ne
 80001e0:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
 80001e4:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
 80001e8:	f000 b96a 	b.w	80004c0 <__aeabi_idiv0>
 80001ec:	f1ad 0c08 	sub.w	ip, sp, #8
 80001f0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001f4:	f000 f806 	bl	8000204 <__udivmoddi4>
 80001f8:	f8dd e004 	ldr.w	lr, [sp, #4]
 80001fc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000200:	b004      	add	sp, #16
 8000202:	4770      	bx	lr

08000204 <__udivmoddi4>:
 8000204:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000208:	9d08      	ldr	r5, [sp, #32]
 800020a:	460c      	mov	r4, r1
 800020c:	2b00      	cmp	r3, #0
 800020e:	d14e      	bne.n	80002ae <__udivmoddi4+0xaa>
 8000210:	4694      	mov	ip, r2
 8000212:	458c      	cmp	ip, r1
 8000214:	4686      	mov	lr, r0
 8000216:	fab2 f282 	clz	r2, r2
 800021a:	d962      	bls.n	80002e2 <__udivmoddi4+0xde>
 800021c:	b14a      	cbz	r2, 8000232 <__udivmoddi4+0x2e>
 800021e:	f1c2 0320 	rsb	r3, r2, #32
 8000222:	4091      	lsls	r1, r2
 8000224:	fa20 f303 	lsr.w	r3, r0, r3
 8000228:	fa0c fc02 	lsl.w	ip, ip, r2
 800022c:	4319      	orrs	r1, r3
 800022e:	fa00 fe02 	lsl.w	lr, r0, r2
 8000232:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000236:	fa1f f68c 	uxth.w	r6, ip
 800023a:	fbb1 f4f7 	udiv	r4, r1, r7
 800023e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000242:	fb07 1114 	mls	r1, r7, r4, r1
 8000246:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800024a:	fb04 f106 	mul.w	r1, r4, r6
 800024e:	4299      	cmp	r1, r3
 8000250:	d90a      	bls.n	8000268 <__udivmoddi4+0x64>
 8000252:	eb1c 0303 	adds.w	r3, ip, r3
 8000256:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
 800025a:	f080 8112 	bcs.w	8000482 <__udivmoddi4+0x27e>
 800025e:	4299      	cmp	r1, r3
 8000260:	f240 810f 	bls.w	8000482 <__udivmoddi4+0x27e>
 8000264:	3c02      	subs	r4, #2
 8000266:	4463      	add	r3, ip
 8000268:	1a59      	subs	r1, r3, r1
 800026a:	fa1f f38e 	uxth.w	r3, lr
 800026e:	fbb1 f0f7 	udiv	r0, r1, r7
 8000272:	fb07 1110 	mls	r1, r7, r0, r1
 8000276:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800027a:	fb00 f606 	mul.w	r6, r0, r6
 800027e:	429e      	cmp	r6, r3
 8000280:	d90a      	bls.n	8000298 <__udivmoddi4+0x94>
 8000282:	eb1c 0303 	adds.w	r3, ip, r3
 8000286:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
 800028a:	f080 80fc 	bcs.w	8000486 <__udivmoddi4+0x282>
 800028e:	429e      	cmp	r6, r3
 8000290:	f240 80f9 	bls.w	8000486 <__udivmoddi4+0x282>
 8000294:	4463      	add	r3, ip
 8000296:	3802      	subs	r0, #2
 8000298:	1b9b      	subs	r3, r3, r6
 800029a:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800029e:	2100      	movs	r1, #0
 80002a0:	b11d      	cbz	r5, 80002aa <__udivmoddi4+0xa6>
 80002a2:	40d3      	lsrs	r3, r2
 80002a4:	2200      	movs	r2, #0
 80002a6:	e9c5 3200 	strd	r3, r2, [r5]
 80002aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002ae:	428b      	cmp	r3, r1
 80002b0:	d905      	bls.n	80002be <__udivmoddi4+0xba>
 80002b2:	b10d      	cbz	r5, 80002b8 <__udivmoddi4+0xb4>
 80002b4:	e9c5 0100 	strd	r0, r1, [r5]
 80002b8:	2100      	movs	r1, #0
 80002ba:	4608      	mov	r0, r1
 80002bc:	e7f5      	b.n	80002aa <__udivmoddi4+0xa6>
 80002be:	fab3 f183 	clz	r1, r3
 80002c2:	2900      	cmp	r1, #0
 80002c4:	d146      	bne.n	8000354 <__udivmoddi4+0x150>
 80002c6:	42a3      	cmp	r3, r4
 80002c8:	d302      	bcc.n	80002d0 <__udivmoddi4+0xcc>
 80002ca:	4290      	cmp	r0, r2
 80002cc:	f0c0 80f0 	bcc.w	80004b0 <__udivmoddi4+0x2ac>
 80002d0:	1a86      	subs	r6, r0, r2
 80002d2:	eb64 0303 	sbc.w	r3, r4, r3
 80002d6:	2001      	movs	r0, #1
 80002d8:	2d00      	cmp	r5, #0
 80002da:	d0e6      	beq.n	80002aa <__udivmoddi4+0xa6>
 80002dc:	e9c5 6300 	strd	r6, r3, [r5]
 80002e0:	e7e3      	b.n	80002aa <__udivmoddi4+0xa6>
 80002e2:	2a00      	cmp	r2, #0
 80002e4:	f040 8090 	bne.w	8000408 <__udivmoddi4+0x204>
 80002e8:	eba1 040c 	sub.w	r4, r1, ip
 80002ec:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f0:	fa1f f78c 	uxth.w	r7, ip
 80002f4:	2101      	movs	r1, #1
 80002f6:	fbb4 f6f8 	udiv	r6, r4, r8
 80002fa:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80002fe:	fb08 4416 	mls	r4, r8, r6, r4
 8000302:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000306:	fb07 f006 	mul.w	r0, r7, r6
 800030a:	4298      	cmp	r0, r3
 800030c:	d908      	bls.n	8000320 <__udivmoddi4+0x11c>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
 8000316:	d202      	bcs.n	800031e <__udivmoddi4+0x11a>
 8000318:	4298      	cmp	r0, r3
 800031a:	f200 80cd 	bhi.w	80004b8 <__udivmoddi4+0x2b4>
 800031e:	4626      	mov	r6, r4
 8000320:	1a1c      	subs	r4, r3, r0
 8000322:	fa1f f38e 	uxth.w	r3, lr
 8000326:	fbb4 f0f8 	udiv	r0, r4, r8
 800032a:	fb08 4410 	mls	r4, r8, r0, r4
 800032e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000332:	fb00 f707 	mul.w	r7, r0, r7
 8000336:	429f      	cmp	r7, r3
 8000338:	d908      	bls.n	800034c <__udivmoddi4+0x148>
 800033a:	eb1c 0303 	adds.w	r3, ip, r3
 800033e:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
 8000342:	d202      	bcs.n	800034a <__udivmoddi4+0x146>
 8000344:	429f      	cmp	r7, r3
 8000346:	f200 80b0 	bhi.w	80004aa <__udivmoddi4+0x2a6>
 800034a:	4620      	mov	r0, r4
 800034c:	1bdb      	subs	r3, r3, r7
 800034e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000352:	e7a5      	b.n	80002a0 <__udivmoddi4+0x9c>
 8000354:	f1c1 0620 	rsb	r6, r1, #32
 8000358:	408b      	lsls	r3, r1
 800035a:	fa22 f706 	lsr.w	r7, r2, r6
 800035e:	431f      	orrs	r7, r3
 8000360:	fa20 fc06 	lsr.w	ip, r0, r6
 8000364:	fa04 f301 	lsl.w	r3, r4, r1
 8000368:	ea43 030c 	orr.w	r3, r3, ip
 800036c:	40f4      	lsrs	r4, r6
 800036e:	fa00 f801 	lsl.w	r8, r0, r1
 8000372:	0c38      	lsrs	r0, r7, #16
 8000374:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000378:	fbb4 fef0 	udiv	lr, r4, r0
 800037c:	fa1f fc87 	uxth.w	ip, r7
 8000380:	fb00 441e 	mls	r4, r0, lr, r4
 8000384:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000388:	fb0e f90c 	mul.w	r9, lr, ip
 800038c:	45a1      	cmp	r9, r4
 800038e:	fa02 f201 	lsl.w	r2, r2, r1
 8000392:	d90a      	bls.n	80003aa <__udivmoddi4+0x1a6>
 8000394:	193c      	adds	r4, r7, r4
 8000396:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
 800039a:	f080 8084 	bcs.w	80004a6 <__udivmoddi4+0x2a2>
 800039e:	45a1      	cmp	r9, r4
 80003a0:	f240 8081 	bls.w	80004a6 <__udivmoddi4+0x2a2>
 80003a4:	f1ae 0e02 	sub.w	lr, lr, #2
 80003a8:	443c      	add	r4, r7
 80003aa:	eba4 0409 	sub.w	r4, r4, r9
 80003ae:	fa1f f983 	uxth.w	r9, r3
 80003b2:	fbb4 f3f0 	udiv	r3, r4, r0
 80003b6:	fb00 4413 	mls	r4, r0, r3, r4
 80003ba:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80003be:	fb03 fc0c 	mul.w	ip, r3, ip
 80003c2:	45a4      	cmp	ip, r4
 80003c4:	d907      	bls.n	80003d6 <__udivmoddi4+0x1d2>
 80003c6:	193c      	adds	r4, r7, r4
 80003c8:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
 80003cc:	d267      	bcs.n	800049e <__udivmoddi4+0x29a>
 80003ce:	45a4      	cmp	ip, r4
 80003d0:	d965      	bls.n	800049e <__udivmoddi4+0x29a>
 80003d2:	3b02      	subs	r3, #2
 80003d4:	443c      	add	r4, r7
 80003d6:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80003da:	fba0 9302 	umull	r9, r3, r0, r2
 80003de:	eba4 040c 	sub.w	r4, r4, ip
 80003e2:	429c      	cmp	r4, r3
 80003e4:	46ce      	mov	lr, r9
 80003e6:	469c      	mov	ip, r3
 80003e8:	d351      	bcc.n	800048e <__udivmoddi4+0x28a>
 80003ea:	d04e      	beq.n	800048a <__udivmoddi4+0x286>
 80003ec:	b155      	cbz	r5, 8000404 <__udivmoddi4+0x200>
 80003ee:	ebb8 030e 	subs.w	r3, r8, lr
 80003f2:	eb64 040c 	sbc.w	r4, r4, ip
 80003f6:	fa04 f606 	lsl.w	r6, r4, r6
 80003fa:	40cb      	lsrs	r3, r1
 80003fc:	431e      	orrs	r6, r3
 80003fe:	40cc      	lsrs	r4, r1
 8000400:	e9c5 6400 	strd	r6, r4, [r5]
 8000404:	2100      	movs	r1, #0
 8000406:	e750      	b.n	80002aa <__udivmoddi4+0xa6>
 8000408:	f1c2 0320 	rsb	r3, r2, #32
 800040c:	fa20 f103 	lsr.w	r1, r0, r3
 8000410:	fa0c fc02 	lsl.w	ip, ip, r2
 8000414:	fa24 f303 	lsr.w	r3, r4, r3
 8000418:	4094      	lsls	r4, r2
 800041a:	430c      	orrs	r4, r1
 800041c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000420:	fa00 fe02 	lsl.w	lr, r0, r2
 8000424:	fa1f f78c 	uxth.w	r7, ip
 8000428:	fbb3 f0f8 	udiv	r0, r3, r8
 800042c:	fb08 3110 	mls	r1, r8, r0, r3
 8000430:	0c23      	lsrs	r3, r4, #16
 8000432:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000436:	fb00 f107 	mul.w	r1, r0, r7
 800043a:	4299      	cmp	r1, r3
 800043c:	d908      	bls.n	8000450 <__udivmoddi4+0x24c>
 800043e:	eb1c 0303 	adds.w	r3, ip, r3
 8000442:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
 8000446:	d22c      	bcs.n	80004a2 <__udivmoddi4+0x29e>
 8000448:	4299      	cmp	r1, r3
 800044a:	d92a      	bls.n	80004a2 <__udivmoddi4+0x29e>
 800044c:	3802      	subs	r0, #2
 800044e:	4463      	add	r3, ip
 8000450:	1a5b      	subs	r3, r3, r1
 8000452:	b2a4      	uxth	r4, r4
 8000454:	fbb3 f1f8 	udiv	r1, r3, r8
 8000458:	fb08 3311 	mls	r3, r8, r1, r3
 800045c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000460:	fb01 f307 	mul.w	r3, r1, r7
 8000464:	42a3      	cmp	r3, r4
 8000466:	d908      	bls.n	800047a <__udivmoddi4+0x276>
 8000468:	eb1c 0404 	adds.w	r4, ip, r4
 800046c:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
 8000470:	d213      	bcs.n	800049a <__udivmoddi4+0x296>
 8000472:	42a3      	cmp	r3, r4
 8000474:	d911      	bls.n	800049a <__udivmoddi4+0x296>
 8000476:	3902      	subs	r1, #2
 8000478:	4464      	add	r4, ip
 800047a:	1ae4      	subs	r4, r4, r3
 800047c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000480:	e739      	b.n	80002f6 <__udivmoddi4+0xf2>
 8000482:	4604      	mov	r4, r0
 8000484:	e6f0      	b.n	8000268 <__udivmoddi4+0x64>
 8000486:	4608      	mov	r0, r1
 8000488:	e706      	b.n	8000298 <__udivmoddi4+0x94>
 800048a:	45c8      	cmp	r8, r9
 800048c:	d2ae      	bcs.n	80003ec <__udivmoddi4+0x1e8>
 800048e:	ebb9 0e02 	subs.w	lr, r9, r2
 8000492:	eb63 0c07 	sbc.w	ip, r3, r7
 8000496:	3801      	subs	r0, #1
 8000498:	e7a8      	b.n	80003ec <__udivmoddi4+0x1e8>
 800049a:	4631      	mov	r1, r6
 800049c:	e7ed      	b.n	800047a <__udivmoddi4+0x276>
 800049e:	4603      	mov	r3, r0
 80004a0:	e799      	b.n	80003d6 <__udivmoddi4+0x1d2>
 80004a2:	4630      	mov	r0, r6
 80004a4:	e7d4      	b.n	8000450 <__udivmoddi4+0x24c>
 80004a6:	46d6      	mov	lr, sl
 80004a8:	e77f      	b.n	80003aa <__udivmoddi4+0x1a6>
 80004aa:	4463      	add	r3, ip
 80004ac:	3802      	subs	r0, #2
 80004ae:	e74d      	b.n	800034c <__udivmoddi4+0x148>
 80004b0:	4606      	mov	r6, r0
 80004b2:	4623      	mov	r3, r4
 80004b4:	4608      	mov	r0, r1
 80004b6:	e70f      	b.n	80002d8 <__udivmoddi4+0xd4>
 80004b8:	3e02      	subs	r6, #2
 80004ba:	4463      	add	r3, ip
 80004bc:	e730      	b.n	8000320 <__udivmoddi4+0x11c>
 80004be:	bf00      	nop

080004c0 <__aeabi_idiv0>:
 80004c0:	4770      	bx	lr
 80004c2:	bf00      	nop

080004c4 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80004c4:	b480      	push	{r7}
 80004c6:	b083      	sub	sp, #12
 80004c8:	af00      	add	r7, sp, #0
 80004ca:	4603      	mov	r3, r0
 80004cc:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80004ce:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80004d2:	2b00      	cmp	r3, #0
 80004d4:	db0b      	blt.n	80004ee <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80004d6:	79fb      	ldrb	r3, [r7, #7]
 80004d8:	f003 021f 	and.w	r2, r3, #31
 80004dc:	4907      	ldr	r1, [pc, #28]	@ (80004fc <__NVIC_EnableIRQ+0x38>)
 80004de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80004e2:	095b      	lsrs	r3, r3, #5
 80004e4:	2001      	movs	r0, #1
 80004e6:	fa00 f202 	lsl.w	r2, r0, r2
 80004ea:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 80004ee:	bf00      	nop
 80004f0:	370c      	adds	r7, #12
 80004f2:	46bd      	mov	sp, r7
 80004f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004f8:	4770      	bx	lr
 80004fa:	bf00      	nop
 80004fc:	e000e100 	.word	0xe000e100

08000500 <main>:
/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void)
{
 8000500:	b580      	push	{r7, lr}
 8000502:	b086      	sub	sp, #24
 8000504:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000506:	f000 fb11 	bl	8000b2c <HAL_Init>

  /* USER CODE BEGIN Init */
  GPIO_Config();
 800050a:	f000 f8c1 	bl	8000690 <GPIO_Config>
  TIM2_Config();
 800050e:	f000 f8eb 	bl	80006e8 <TIM2_Config>
  USART2_Config();
 8000512:	f000 f92f 	bl	8000774 <USART2_Config>
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000516:	f000 f85b 	bl	80005d0 <SystemClock_Config>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    index = 0; // Reset index for the next input
 800051a:	4b27      	ldr	r3, [pc, #156]	@ (80005b8 <main+0xb8>)
 800051c:	2200      	movs	r2, #0
 800051e:	701a      	strb	r2, [r3, #0]

    // Check if the input contains any letter
    if (isNumber == true)
 8000520:	4b26      	ldr	r3, [pc, #152]	@ (80005bc <main+0xbc>)
 8000522:	781b      	ldrb	r3, [r3, #0]
 8000524:	2b00      	cmp	r3, #0
 8000526:	d044      	beq.n	80005b2 <main+0xb2>
    {
      // Convert input to integer
      int number = atoi(InputBuffer);
 8000528:	4825      	ldr	r0, [pc, #148]	@ (80005c0 <main+0xc0>)
 800052a:	f001 f89f 	bl	800166c <atoi>
 800052e:	6178      	str	r0, [r7, #20]

      // Determine the number of digits
      int numDigits = 0;
 8000530:	2300      	movs	r3, #0
 8000532:	613b      	str	r3, [r7, #16]
      int temp = number;
 8000534:	697b      	ldr	r3, [r7, #20]
 8000536:	60fb      	str	r3, [r7, #12]
      do
      {
        numDigits++;
 8000538:	693b      	ldr	r3, [r7, #16]
 800053a:	3301      	adds	r3, #1
 800053c:	613b      	str	r3, [r7, #16]
        temp /= 10;
 800053e:	68fb      	ldr	r3, [r7, #12]
 8000540:	4a20      	ldr	r2, [pc, #128]	@ (80005c4 <main+0xc4>)
 8000542:	fb82 1203 	smull	r1, r2, r2, r3
 8000546:	1092      	asrs	r2, r2, #2
 8000548:	17db      	asrs	r3, r3, #31
 800054a:	1ad3      	subs	r3, r2, r3
 800054c:	60fb      	str	r3, [r7, #12]
      } while (temp > 0);
 800054e:	68fb      	ldr	r3, [r7, #12]
 8000550:	2b00      	cmp	r3, #0
 8000552:	dcf1      	bgt.n	8000538 <main+0x38>

      // Display each digit on the corresponding LED display
      for (int i = 0; i < numDigits; i++)
 8000554:	2300      	movs	r3, #0
 8000556:	60bb      	str	r3, [r7, #8]
 8000558:	e026      	b.n	80005a8 <main+0xa8>
      {
        int digit = number % 10;
 800055a:	697a      	ldr	r2, [r7, #20]
 800055c:	4b19      	ldr	r3, [pc, #100]	@ (80005c4 <main+0xc4>)
 800055e:	fb83 1302 	smull	r1, r3, r3, r2
 8000562:	1099      	asrs	r1, r3, #2
 8000564:	17d3      	asrs	r3, r2, #31
 8000566:	1ac9      	subs	r1, r1, r3
 8000568:	460b      	mov	r3, r1
 800056a:	009b      	lsls	r3, r3, #2
 800056c:	440b      	add	r3, r1
 800056e:	005b      	lsls	r3, r3, #1
 8000570:	1ad3      	subs	r3, r2, r3
 8000572:	607b      	str	r3, [r7, #4]
        number /= 10;
 8000574:	697b      	ldr	r3, [r7, #20]
 8000576:	4a13      	ldr	r2, [pc, #76]	@ (80005c4 <main+0xc4>)
 8000578:	fb82 1203 	smull	r1, r2, r2, r3
 800057c:	1092      	asrs	r2, r2, #2
 800057e:	17db      	asrs	r3, r3, #31
 8000580:	1ad3      	subs	r3, r2, r3
 8000582:	617b      	str	r3, [r7, #20]
        send_Number(NumbersASCII[digit], LED_addr[i]);
 8000584:	4a10      	ldr	r2, [pc, #64]	@ (80005c8 <main+0xc8>)
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	4413      	add	r3, r2
 800058a:	781a      	ldrb	r2, [r3, #0]
 800058c:	490f      	ldr	r1, [pc, #60]	@ (80005cc <main+0xcc>)
 800058e:	68bb      	ldr	r3, [r7, #8]
 8000590:	440b      	add	r3, r1
 8000592:	781b      	ldrb	r3, [r3, #0]
 8000594:	4619      	mov	r1, r3
 8000596:	4610      	mov	r0, r2
 8000598:	f000 f992 	bl	80008c0 <send_Number>
        HAL_Delay(1); // Small delay to ensure proper display
 800059c:	2001      	movs	r0, #1
 800059e:	f000 fb37 	bl	8000c10 <HAL_Delay>
      for (int i = 0; i < numDigits; i++)
 80005a2:	68bb      	ldr	r3, [r7, #8]
 80005a4:	3301      	adds	r3, #1
 80005a6:	60bb      	str	r3, [r7, #8]
 80005a8:	68ba      	ldr	r2, [r7, #8]
 80005aa:	693b      	ldr	r3, [r7, #16]
 80005ac:	429a      	cmp	r2, r3
 80005ae:	dbd4      	blt.n	800055a <main+0x5a>
 80005b0:	e7b3      	b.n	800051a <main+0x1a>
      }
    }
    else
    {
      send_Error();
 80005b2:	f000 f9f5 	bl	80009a0 <send_Error>
    index = 0; // Reset index for the next input
 80005b6:	e7b0      	b.n	800051a <main+0x1a>
 80005b8:	2000007e 	.word	0x2000007e
 80005bc:	2000007d 	.word	0x2000007d
 80005c0:	20000078 	.word	0x20000078
 80005c4:	66666667 	.word	0x66666667
 80005c8:	080017f8 	.word	0x080017f8
 80005cc:	08001804 	.word	0x08001804

080005d0 <SystemClock_Config>:
/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void)
{
 80005d0:	b580      	push	{r7, lr}
 80005d2:	b094      	sub	sp, #80	@ 0x50
 80005d4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80005d6:	f107 0320 	add.w	r3, r7, #32
 80005da:	2230      	movs	r2, #48	@ 0x30
 80005dc:	2100      	movs	r1, #0
 80005de:	4618      	mov	r0, r3
 80005e0:	f001 f8cc 	bl	800177c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80005e4:	f107 030c 	add.w	r3, r7, #12
 80005e8:	2200      	movs	r2, #0
 80005ea:	601a      	str	r2, [r3, #0]
 80005ec:	605a      	str	r2, [r3, #4]
 80005ee:	609a      	str	r2, [r3, #8]
 80005f0:	60da      	str	r2, [r3, #12]
 80005f2:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
   */
  __HAL_RCC_PWR_CLK_ENABLE();
 80005f4:	2300      	movs	r3, #0
 80005f6:	60bb      	str	r3, [r7, #8]
 80005f8:	4b23      	ldr	r3, [pc, #140]	@ (8000688 <SystemClock_Config+0xb8>)
 80005fa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80005fc:	4a22      	ldr	r2, [pc, #136]	@ (8000688 <SystemClock_Config+0xb8>)
 80005fe:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000602:	6413      	str	r3, [r2, #64]	@ 0x40
 8000604:	4b20      	ldr	r3, [pc, #128]	@ (8000688 <SystemClock_Config+0xb8>)
 8000606:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000608:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800060c:	60bb      	str	r3, [r7, #8]
 800060e:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 8000610:	2300      	movs	r3, #0
 8000612:	607b      	str	r3, [r7, #4]
 8000614:	4b1d      	ldr	r3, [pc, #116]	@ (800068c <SystemClock_Config+0xbc>)
 8000616:	681b      	ldr	r3, [r3, #0]
 8000618:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 800061c:	4a1b      	ldr	r2, [pc, #108]	@ (800068c <SystemClock_Config+0xbc>)
 800061e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8000622:	6013      	str	r3, [r2, #0]
 8000624:	4b19      	ldr	r3, [pc, #100]	@ (800068c <SystemClock_Config+0xbc>)
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 800062c:	607b      	str	r3, [r7, #4]
 800062e:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
   * in the RCC_OscInitTypeDef structure.
   */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000630:	2302      	movs	r3, #2
 8000632:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000634:	2301      	movs	r3, #1
 8000636:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000638:	2310      	movs	r3, #16
 800063a:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 800063c:	2300      	movs	r3, #0
 800063e:	63bb      	str	r3, [r7, #56]	@ 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000640:	f107 0320 	add.w	r3, r7, #32
 8000644:	4618      	mov	r0, r3
 8000646:	f000 fbed 	bl	8000e24 <HAL_RCC_OscConfig>
 800064a:	4603      	mov	r3, r0
 800064c:	2b00      	cmp	r3, #0
 800064e:	d001      	beq.n	8000654 <SystemClock_Config+0x84>
  {
    Error_Handler();
 8000650:	f000 f9d0 	bl	80009f4 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
   */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8000654:	230f      	movs	r3, #15
 8000656:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000658:	2300      	movs	r3, #0
 800065a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800065c:	2300      	movs	r3, #0
 800065e:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000660:	2300      	movs	r3, #0
 8000662:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000664:	2300      	movs	r3, #0
 8000666:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000668:	f107 030c 	add.w	r3, r7, #12
 800066c:	2100      	movs	r1, #0
 800066e:	4618      	mov	r0, r3
 8000670:	f000 fe50 	bl	8001314 <HAL_RCC_ClockConfig>
 8000674:	4603      	mov	r3, r0
 8000676:	2b00      	cmp	r3, #0
 8000678:	d001      	beq.n	800067e <SystemClock_Config+0xae>
  {
    Error_Handler();
 800067a:	f000 f9bb 	bl	80009f4 <Error_Handler>
  }
}
 800067e:	bf00      	nop
 8000680:	3750      	adds	r7, #80	@ 0x50
 8000682:	46bd      	mov	sp, r7
 8000684:	bd80      	pop	{r7, pc}
 8000686:	bf00      	nop
 8000688:	40023800 	.word	0x40023800
 800068c:	40007000 	.word	0x40007000

08000690 <GPIO_Config>:

/* USER CODE BEGIN 4 */
void GPIO_Config()
{
 8000690:	b480      	push	{r7}
 8000692:	af00      	add	r7, sp, #0
  // TO DO - GPIO configuration

  // Enable clock to GPIOA; GPIOB
  RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIOBEN;
 8000694:	4b11      	ldr	r3, [pc, #68]	@ (80006dc <GPIO_Config+0x4c>)
 8000696:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000698:	4a10      	ldr	r2, [pc, #64]	@ (80006dc <GPIO_Config+0x4c>)
 800069a:	f043 0303 	orr.w	r3, r3, #3
 800069e:	6313      	str	r3, [r2, #48]	@ 0x30

  // Set TIM2 LED to PA5 pin
  GPIOA->MODER |= GPIO_MODER_MODER5;
 80006a0:	4b0f      	ldr	r3, [pc, #60]	@ (80006e0 <GPIO_Config+0x50>)
 80006a2:	681b      	ldr	r3, [r3, #0]
 80006a4:	4a0e      	ldr	r2, [pc, #56]	@ (80006e0 <GPIO_Config+0x50>)
 80006a6:	f443 6340 	orr.w	r3, r3, #3072	@ 0xc00
 80006aa:	6013      	str	r3, [r2, #0]

  // Set PB5 as output (Latch - start low/end high)
  GPIOB->MODER |= GPIO_MODER_MODER5_0;
 80006ac:	4b0d      	ldr	r3, [pc, #52]	@ (80006e4 <GPIO_Config+0x54>)
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	4a0c      	ldr	r2, [pc, #48]	@ (80006e4 <GPIO_Config+0x54>)
 80006b2:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80006b6:	6013      	str	r3, [r2, #0]

  // Set PA8 as output (SHCP - clock signat to LED panel)
  GPIOA->MODER |= GPIO_MODER_MODER8_0;
 80006b8:	4b09      	ldr	r3, [pc, #36]	@ (80006e0 <GPIO_Config+0x50>)
 80006ba:	681b      	ldr	r3, [r3, #0]
 80006bc:	4a08      	ldr	r2, [pc, #32]	@ (80006e0 <GPIO_Config+0x50>)
 80006be:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80006c2:	6013      	str	r3, [r2, #0]

  // Set PA9 as output (STCP - DATA to LED panel)
  GPIOA->MODER |= GPIO_MODER_MODER9_0;
 80006c4:	4b06      	ldr	r3, [pc, #24]	@ (80006e0 <GPIO_Config+0x50>)
 80006c6:	681b      	ldr	r3, [r3, #0]
 80006c8:	4a05      	ldr	r2, [pc, #20]	@ (80006e0 <GPIO_Config+0x50>)
 80006ca:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80006ce:	6013      	str	r3, [r2, #0]
}
 80006d0:	bf00      	nop
 80006d2:	46bd      	mov	sp, r7
 80006d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006d8:	4770      	bx	lr
 80006da:	bf00      	nop
 80006dc:	40023800 	.word	0x40023800
 80006e0:	40020000 	.word	0x40020000
 80006e4:	40020400 	.word	0x40020400

080006e8 <TIM2_Config>:

/*	TIM2 configuration function	*/
void TIM2_Config()
{
 80006e8:	b580      	push	{r7, lr}
 80006ea:	af00      	add	r7, sp, #0
  // Enable TIM2 clock
  RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 80006ec:	4b11      	ldr	r3, [pc, #68]	@ (8000734 <TIM2_Config+0x4c>)
 80006ee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80006f0:	4a10      	ldr	r2, [pc, #64]	@ (8000734 <TIM2_Config+0x4c>)
 80006f2:	f043 0301 	orr.w	r3, r3, #1
 80006f6:	6413      	str	r3, [r2, #64]	@ 0x40

  // Set prescaler and auto-reload value
  TIM2->PSC = PRESCALER - 1; // Prescaler value
 80006f8:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80006fc:	f643 627f 	movw	r2, #15999	@ 0x3e7f
 8000700:	629a      	str	r2, [r3, #40]	@ 0x28
  TIM2->ARR = AR - 1;        // Auto-reload value
 8000702:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000706:	2209      	movs	r2, #9
 8000708:	62da      	str	r2, [r3, #44]	@ 0x2c

  // Enable update interrupt
  TIM2->DIER |= TIM_DIER_UIE;
 800070a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800070e:	68db      	ldr	r3, [r3, #12]
 8000710:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000714:	f043 0301 	orr.w	r3, r3, #1
 8000718:	60d3      	str	r3, [r2, #12]

  // Enable Timer 2
  TIM2->CR1 |= TIM_CR1_CEN;
 800071a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800071e:	681b      	ldr	r3, [r3, #0]
 8000720:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000724:	f043 0301 	orr.w	r3, r3, #1
 8000728:	6013      	str	r3, [r2, #0]

  // Enable Timer 2 interrupt in NVIC
  NVIC_EnableIRQ(TIM2_IRQn);
 800072a:	201c      	movs	r0, #28
 800072c:	f7ff feca 	bl	80004c4 <__NVIC_EnableIRQ>
}
 8000730:	bf00      	nop
 8000732:	bd80      	pop	{r7, pc}
 8000734:	40023800 	.word	0x40023800

08000738 <TIM2_IRQHandler>:

void TIM2_IRQHandler(void)
{
 8000738:	b480      	push	{r7}
 800073a:	af00      	add	r7, sp, #0
  if (TIM2->SR & TIM_SR_UIF)
 800073c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000740:	691b      	ldr	r3, [r3, #16]
 8000742:	f003 0301 	and.w	r3, r3, #1
 8000746:	2b00      	cmp	r3, #0
 8000748:	d00d      	beq.n	8000766 <TIM2_IRQHandler+0x2e>
  {
    // Clear update interrupt flag
    TIM2->SR &= ~TIM_SR_UIF;
 800074a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800074e:	691b      	ldr	r3, [r3, #16]
 8000750:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000754:	f023 0301 	bic.w	r3, r3, #1
 8000758:	6113      	str	r3, [r2, #16]

    // Toggle TIM2 LED
    GPIOA->ODR ^= GPIO_ODR_OD5;
 800075a:	4b05      	ldr	r3, [pc, #20]	@ (8000770 <TIM2_IRQHandler+0x38>)
 800075c:	695b      	ldr	r3, [r3, #20]
 800075e:	4a04      	ldr	r2, [pc, #16]	@ (8000770 <TIM2_IRQHandler+0x38>)
 8000760:	f083 0320 	eor.w	r3, r3, #32
 8000764:	6153      	str	r3, [r2, #20]
  }
}
 8000766:	bf00      	nop
 8000768:	46bd      	mov	sp, r7
 800076a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800076e:	4770      	bx	lr
 8000770:	40020000 	.word	0x40020000

08000774 <USART2_Config>:

/* USART configuration function */
void USART2_Config()
{
 8000774:	b580      	push	{r7, lr}
 8000776:	af00      	add	r7, sp, #0
  RCC->APB1ENR |= RCC_APB1ENR_USART2EN; // povoleni hodin pro usart2
 8000778:	4b21      	ldr	r3, [pc, #132]	@ (8000800 <USART2_Config+0x8c>)
 800077a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800077c:	4a20      	ldr	r2, [pc, #128]	@ (8000800 <USART2_Config+0x8c>)
 800077e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000782:	6413      	str	r3, [r2, #64]	@ 0x40
  USART2->BRR = (8 << 4) | 11;          // 8.6875
 8000784:	4b1f      	ldr	r3, [pc, #124]	@ (8000804 <USART2_Config+0x90>)
 8000786:	228b      	movs	r2, #139	@ 0x8b
 8000788:	609a      	str	r2, [r3, #8]
  USART2->CR1 |= USART_CR1_UE;          // povoleni USART rozhrani
 800078a:	4b1e      	ldr	r3, [pc, #120]	@ (8000804 <USART2_Config+0x90>)
 800078c:	68db      	ldr	r3, [r3, #12]
 800078e:	4a1d      	ldr	r2, [pc, #116]	@ (8000804 <USART2_Config+0x90>)
 8000790:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000794:	60d3      	str	r3, [r2, #12]
  USART2->CR1 |= USART_CR1_RE;          // povoleni prijimace
 8000796:	4b1b      	ldr	r3, [pc, #108]	@ (8000804 <USART2_Config+0x90>)
 8000798:	68db      	ldr	r3, [r3, #12]
 800079a:	4a1a      	ldr	r2, [pc, #104]	@ (8000804 <USART2_Config+0x90>)
 800079c:	f043 0304 	orr.w	r3, r3, #4
 80007a0:	60d3      	str	r3, [r2, #12]
  USART2->CR1 |= USART_CR1_TE;          // povoleni odesilaciho bloku
 80007a2:	4b18      	ldr	r3, [pc, #96]	@ (8000804 <USART2_Config+0x90>)
 80007a4:	68db      	ldr	r3, [r3, #12]
 80007a6:	4a17      	ldr	r2, [pc, #92]	@ (8000804 <USART2_Config+0x90>)
 80007a8:	f043 0308 	orr.w	r3, r3, #8
 80007ac:	60d3      	str	r3, [r2, #12]

  RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;          // povoleni hodin pro GPIOA
 80007ae:	4b14      	ldr	r3, [pc, #80]	@ (8000800 <USART2_Config+0x8c>)
 80007b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80007b2:	4a13      	ldr	r2, [pc, #76]	@ (8000800 <USART2_Config+0x8c>)
 80007b4:	f043 0301 	orr.w	r3, r3, #1
 80007b8:	6313      	str	r3, [r2, #48]	@ 0x30
  GPIOA->MODER |= 0x02 << GPIO_MODER_MODE2_Pos; // nastaveni alt fce pro PA2
 80007ba:	4b13      	ldr	r3, [pc, #76]	@ (8000808 <USART2_Config+0x94>)
 80007bc:	681b      	ldr	r3, [r3, #0]
 80007be:	4a12      	ldr	r2, [pc, #72]	@ (8000808 <USART2_Config+0x94>)
 80007c0:	f043 0320 	orr.w	r3, r3, #32
 80007c4:	6013      	str	r3, [r2, #0]
  GPIOA->MODER |= 0x02 << GPIO_MODER_MODE3_Pos; // nastaveni alt fce pro PA3
 80007c6:	4b10      	ldr	r3, [pc, #64]	@ (8000808 <USART2_Config+0x94>)
 80007c8:	681b      	ldr	r3, [r3, #0]
 80007ca:	4a0f      	ldr	r2, [pc, #60]	@ (8000808 <USART2_Config+0x94>)
 80007cc:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80007d0:	6013      	str	r3, [r2, #0]

  GPIOA->AFR[0] |= 0x07 << GPIO_AFRL_AFSEL2_Pos; // vyber alt fce 7 (USART2) pro PA2
 80007d2:	4b0d      	ldr	r3, [pc, #52]	@ (8000808 <USART2_Config+0x94>)
 80007d4:	6a1b      	ldr	r3, [r3, #32]
 80007d6:	4a0c      	ldr	r2, [pc, #48]	@ (8000808 <USART2_Config+0x94>)
 80007d8:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 80007dc:	6213      	str	r3, [r2, #32]
  GPIOA->AFR[0] |= 0x07 << GPIO_AFRL_AFSEL3_Pos; // vyber alt fce 7 (USART2) pro PA3
 80007de:	4b0a      	ldr	r3, [pc, #40]	@ (8000808 <USART2_Config+0x94>)
 80007e0:	6a1b      	ldr	r3, [r3, #32]
 80007e2:	4a09      	ldr	r2, [pc, #36]	@ (8000808 <USART2_Config+0x94>)
 80007e4:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 80007e8:	6213      	str	r3, [r2, #32]

  USART2->CR1 |= USART_CR1_RXNEIE; // povoleni preruseni pri prijeti znaku
 80007ea:	4b06      	ldr	r3, [pc, #24]	@ (8000804 <USART2_Config+0x90>)
 80007ec:	68db      	ldr	r3, [r3, #12]
 80007ee:	4a05      	ldr	r2, [pc, #20]	@ (8000804 <USART2_Config+0x90>)
 80007f0:	f043 0320 	orr.w	r3, r3, #32
 80007f4:	60d3      	str	r3, [r2, #12]
  NVIC_EnableIRQ(USART2_IRQn);     // povoleni preruseni od USART2
 80007f6:	2026      	movs	r0, #38	@ 0x26
 80007f8:	f7ff fe64 	bl	80004c4 <__NVIC_EnableIRQ>
}
 80007fc:	bf00      	nop
 80007fe:	bd80      	pop	{r7, pc}
 8000800:	40023800 	.word	0x40023800
 8000804:	40004400 	.word	0x40004400
 8000808:	40020000 	.word	0x40020000

0800080c <USART2_IRQHandler>:

void USART2_IRQHandler(void)
{
 800080c:	b580      	push	{r7, lr}
 800080e:	b082      	sub	sp, #8
 8000810:	af00      	add	r7, sp, #0
  if (USART2->SR & USART_SR_RXNE)
 8000812:	4b1b      	ldr	r3, [pc, #108]	@ (8000880 <USART2_IRQHandler+0x74>)
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	f003 0320 	and.w	r3, r3, #32
 800081a:	2b00      	cmp	r3, #0
 800081c:	d02b      	beq.n	8000876 <USART2_IRQHandler+0x6a>
  {
    // Read Data Register to clear RXNE flag
    char received_char = USART2->DR;
 800081e:	4b18      	ldr	r3, [pc, #96]	@ (8000880 <USART2_IRQHandler+0x74>)
 8000820:	685b      	ldr	r3, [r3, #4]
 8000822:	71fb      	strb	r3, [r7, #7]

    // Check if received character is a number
    if (received_char >= '0' && received_char <= '9')
 8000824:	79fb      	ldrb	r3, [r7, #7]
 8000826:	2b2f      	cmp	r3, #47	@ 0x2f
 8000828:	d90a      	bls.n	8000840 <USART2_IRQHandler+0x34>
 800082a:	79fb      	ldrb	r3, [r7, #7]
 800082c:	2b39      	cmp	r3, #57	@ 0x39
 800082e:	d807      	bhi.n	8000840 <USART2_IRQHandler+0x34>
    {
      isNumber = true;
 8000830:	4b14      	ldr	r3, [pc, #80]	@ (8000884 <USART2_IRQHandler+0x78>)
 8000832:	2201      	movs	r2, #1
 8000834:	701a      	strb	r2, [r3, #0]
      USART2_sendChar(received_char);
 8000836:	79fb      	ldrb	r3, [r7, #7]
 8000838:	4618      	mov	r0, r3
 800083a:	f000 f829 	bl	8000890 <USART2_sendChar>
 800083e:	e002      	b.n	8000846 <USART2_IRQHandler+0x3a>
    }
    else
    {
      isNumber = false;
 8000840:	4b10      	ldr	r3, [pc, #64]	@ (8000884 <USART2_IRQHandler+0x78>)
 8000842:	2200      	movs	r2, #0
 8000844:	701a      	strb	r2, [r3, #0]
    }

    // Store received character in buffer
    if (received_char != '\n' && index < sizeof(InputBuffer) - 1)
 8000846:	79fb      	ldrb	r3, [r7, #7]
 8000848:	2b0a      	cmp	r3, #10
 800084a:	d00e      	beq.n	800086a <USART2_IRQHandler+0x5e>
 800084c:	4b0e      	ldr	r3, [pc, #56]	@ (8000888 <USART2_IRQHandler+0x7c>)
 800084e:	781b      	ldrb	r3, [r3, #0]
 8000850:	2b03      	cmp	r3, #3
 8000852:	d80a      	bhi.n	800086a <USART2_IRQHandler+0x5e>
    {
      InputBuffer[index++] = received_char;
 8000854:	4b0c      	ldr	r3, [pc, #48]	@ (8000888 <USART2_IRQHandler+0x7c>)
 8000856:	781b      	ldrb	r3, [r3, #0]
 8000858:	1c5a      	adds	r2, r3, #1
 800085a:	b2d1      	uxtb	r1, r2
 800085c:	4a0a      	ldr	r2, [pc, #40]	@ (8000888 <USART2_IRQHandler+0x7c>)
 800085e:	7011      	strb	r1, [r2, #0]
 8000860:	4619      	mov	r1, r3
 8000862:	4a0a      	ldr	r2, [pc, #40]	@ (800088c <USART2_IRQHandler+0x80>)
 8000864:	79fb      	ldrb	r3, [r7, #7]
 8000866:	5453      	strb	r3, [r2, r1]
    else
    {
      InputBuffer[index - 1] = '\0'; // Null-terminate the string
    }
  }
}
 8000868:	e005      	b.n	8000876 <USART2_IRQHandler+0x6a>
      InputBuffer[index - 1] = '\0'; // Null-terminate the string
 800086a:	4b07      	ldr	r3, [pc, #28]	@ (8000888 <USART2_IRQHandler+0x7c>)
 800086c:	781b      	ldrb	r3, [r3, #0]
 800086e:	3b01      	subs	r3, #1
 8000870:	4a06      	ldr	r2, [pc, #24]	@ (800088c <USART2_IRQHandler+0x80>)
 8000872:	2100      	movs	r1, #0
 8000874:	54d1      	strb	r1, [r2, r3]
}
 8000876:	bf00      	nop
 8000878:	3708      	adds	r7, #8
 800087a:	46bd      	mov	sp, r7
 800087c:	bd80      	pop	{r7, pc}
 800087e:	bf00      	nop
 8000880:	40004400 	.word	0x40004400
 8000884:	2000007d 	.word	0x2000007d
 8000888:	2000007e 	.word	0x2000007e
 800088c:	20000078 	.word	0x20000078

08000890 <USART2_sendChar>:

// USART char sending function
void USART2_sendChar(char c)
{
 8000890:	b480      	push	{r7}
 8000892:	b083      	sub	sp, #12
 8000894:	af00      	add	r7, sp, #0
 8000896:	4603      	mov	r3, r0
 8000898:	71fb      	strb	r3, [r7, #7]
  while (!(USART2->SR & USART_SR_TXE))
 800089a:	bf00      	nop
 800089c:	4b07      	ldr	r3, [pc, #28]	@ (80008bc <USART2_sendChar+0x2c>)
 800089e:	681b      	ldr	r3, [r3, #0]
 80008a0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80008a4:	2b00      	cmp	r3, #0
 80008a6:	d0f9      	beq.n	800089c <USART2_sendChar+0xc>
    ; // Clear space for transmit
  USART2->DR = c;
 80008a8:	4a04      	ldr	r2, [pc, #16]	@ (80008bc <USART2_sendChar+0x2c>)
 80008aa:	79fb      	ldrb	r3, [r7, #7]
 80008ac:	6053      	str	r3, [r2, #4]
}
 80008ae:	bf00      	nop
 80008b0:	370c      	adds	r7, #12
 80008b2:	46bd      	mov	sp, r7
 80008b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008b8:	4770      	bx	lr
 80008ba:	bf00      	nop
 80008bc:	40004400 	.word	0x40004400

080008c0 <send_Number>:
 *
 * @param  data Number to be displayed
 * @param  LED_addr address of the LED display
 */
void send_Number(char data, uint8_t LED_addr)
{
 80008c0:	b480      	push	{r7}
 80008c2:	b085      	sub	sp, #20
 80008c4:	af00      	add	r7, sp, #0
 80008c6:	4603      	mov	r3, r0
 80008c8:	460a      	mov	r2, r1
 80008ca:	71fb      	strb	r3, [r7, #7]
 80008cc:	4613      	mov	r3, r2
 80008ce:	71bb      	strb	r3, [r7, #6]
  // Set Latch to low - Start condition
  GPIOB->ODR &= ~GPIO_ODR_OD5;
 80008d0:	4b31      	ldr	r3, [pc, #196]	@ (8000998 <send_Number+0xd8>)
 80008d2:	695b      	ldr	r3, [r3, #20]
 80008d4:	4a30      	ldr	r2, [pc, #192]	@ (8000998 <send_Number+0xd8>)
 80008d6:	f023 0320 	bic.w	r3, r3, #32
 80008da:	6153      	str	r3, [r2, #20]

  // Send number to LED display
  for (int i = 0; i < 8; i++)
 80008dc:	2300      	movs	r3, #0
 80008de:	60fb      	str	r3, [r7, #12]
 80008e0:	e022      	b.n	8000928 <send_Number+0x68>
  {
    // Set clock to low
    GPIOA->ODR &= ~GPIO_ODR_OD8;
 80008e2:	4b2e      	ldr	r3, [pc, #184]	@ (800099c <send_Number+0xdc>)
 80008e4:	695b      	ldr	r3, [r3, #20]
 80008e6:	4a2d      	ldr	r2, [pc, #180]	@ (800099c <send_Number+0xdc>)
 80008e8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80008ec:	6153      	str	r3, [r2, #20]

    // Set data to be sent
    if (!(data & 0x80))
 80008ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80008f2:	2b00      	cmp	r3, #0
 80008f4:	db06      	blt.n	8000904 <send_Number+0x44>
    {
      GPIOA->ODR |= GPIO_ODR_OD9;
 80008f6:	4b29      	ldr	r3, [pc, #164]	@ (800099c <send_Number+0xdc>)
 80008f8:	695b      	ldr	r3, [r3, #20]
 80008fa:	4a28      	ldr	r2, [pc, #160]	@ (800099c <send_Number+0xdc>)
 80008fc:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000900:	6153      	str	r3, [r2, #20]
 8000902:	e005      	b.n	8000910 <send_Number+0x50>
    }
    else
    {
      GPIOA->ODR &= ~GPIO_ODR_OD9;
 8000904:	4b25      	ldr	r3, [pc, #148]	@ (800099c <send_Number+0xdc>)
 8000906:	695b      	ldr	r3, [r3, #20]
 8000908:	4a24      	ldr	r2, [pc, #144]	@ (800099c <send_Number+0xdc>)
 800090a:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800090e:	6153      	str	r3, [r2, #20]
    }

    // Set clock to high
    GPIOA->ODR |= GPIO_ODR_OD8;
 8000910:	4b22      	ldr	r3, [pc, #136]	@ (800099c <send_Number+0xdc>)
 8000912:	695b      	ldr	r3, [r3, #20]
 8000914:	4a21      	ldr	r2, [pc, #132]	@ (800099c <send_Number+0xdc>)
 8000916:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800091a:	6153      	str	r3, [r2, #20]

    // Shift data to the left
    data <<= 1;
 800091c:	79fb      	ldrb	r3, [r7, #7]
 800091e:	005b      	lsls	r3, r3, #1
 8000920:	71fb      	strb	r3, [r7, #7]
  for (int i = 0; i < 8; i++)
 8000922:	68fb      	ldr	r3, [r7, #12]
 8000924:	3301      	adds	r3, #1
 8000926:	60fb      	str	r3, [r7, #12]
 8000928:	68fb      	ldr	r3, [r7, #12]
 800092a:	2b07      	cmp	r3, #7
 800092c:	ddd9      	ble.n	80008e2 <send_Number+0x22>
  }

  // Send address of the LED display
  for (int i = 0; i < 8; i++)
 800092e:	2300      	movs	r3, #0
 8000930:	60bb      	str	r3, [r7, #8]
 8000932:	e022      	b.n	800097a <send_Number+0xba>
  {
    // Set clock to low
    GPIOA->ODR &= ~GPIO_ODR_OD8;
 8000934:	4b19      	ldr	r3, [pc, #100]	@ (800099c <send_Number+0xdc>)
 8000936:	695b      	ldr	r3, [r3, #20]
 8000938:	4a18      	ldr	r2, [pc, #96]	@ (800099c <send_Number+0xdc>)
 800093a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800093e:	6153      	str	r3, [r2, #20]

    // Set data to be sent
    if (LED_addr & 0x80)
 8000940:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8000944:	2b00      	cmp	r3, #0
 8000946:	da06      	bge.n	8000956 <send_Number+0x96>
    {
      GPIOA->ODR |= GPIO_ODR_OD9;
 8000948:	4b14      	ldr	r3, [pc, #80]	@ (800099c <send_Number+0xdc>)
 800094a:	695b      	ldr	r3, [r3, #20]
 800094c:	4a13      	ldr	r2, [pc, #76]	@ (800099c <send_Number+0xdc>)
 800094e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000952:	6153      	str	r3, [r2, #20]
 8000954:	e005      	b.n	8000962 <send_Number+0xa2>
    }
    else
    {
      GPIOA->ODR &= ~GPIO_ODR_OD9;
 8000956:	4b11      	ldr	r3, [pc, #68]	@ (800099c <send_Number+0xdc>)
 8000958:	695b      	ldr	r3, [r3, #20]
 800095a:	4a10      	ldr	r2, [pc, #64]	@ (800099c <send_Number+0xdc>)
 800095c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000960:	6153      	str	r3, [r2, #20]
    }

    // Set clock to high
    GPIOA->ODR |= GPIO_ODR_OD8;
 8000962:	4b0e      	ldr	r3, [pc, #56]	@ (800099c <send_Number+0xdc>)
 8000964:	695b      	ldr	r3, [r3, #20]
 8000966:	4a0d      	ldr	r2, [pc, #52]	@ (800099c <send_Number+0xdc>)
 8000968:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800096c:	6153      	str	r3, [r2, #20]

    // Shift data to the left
    LED_addr <<= 1;
 800096e:	79bb      	ldrb	r3, [r7, #6]
 8000970:	005b      	lsls	r3, r3, #1
 8000972:	71bb      	strb	r3, [r7, #6]
  for (int i = 0; i < 8; i++)
 8000974:	68bb      	ldr	r3, [r7, #8]
 8000976:	3301      	adds	r3, #1
 8000978:	60bb      	str	r3, [r7, #8]
 800097a:	68bb      	ldr	r3, [r7, #8]
 800097c:	2b07      	cmp	r3, #7
 800097e:	ddd9      	ble.n	8000934 <send_Number+0x74>
  }

  // Set Latch to high - End condition
  GPIOB->ODR |= GPIO_ODR_OD5;
 8000980:	4b05      	ldr	r3, [pc, #20]	@ (8000998 <send_Number+0xd8>)
 8000982:	695b      	ldr	r3, [r3, #20]
 8000984:	4a04      	ldr	r2, [pc, #16]	@ (8000998 <send_Number+0xd8>)
 8000986:	f043 0320 	orr.w	r3, r3, #32
 800098a:	6153      	str	r3, [r2, #20]
}
 800098c:	bf00      	nop
 800098e:	3714      	adds	r7, #20
 8000990:	46bd      	mov	sp, r7
 8000992:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000996:	4770      	bx	lr
 8000998:	40020400 	.word	0x40020400
 800099c:	40020000 	.word	0x40020000

080009a0 <send_Error>:

// Send error to LED display
void send_Error()
{
 80009a0:	b580      	push	{r7, lr}
 80009a2:	af00      	add	r7, sp, #0
  // Set Latch to low - Start condition
  GPIOB->ODR &= ~GPIO_ODR_OD5;
 80009a4:	4b12      	ldr	r3, [pc, #72]	@ (80009f0 <send_Error+0x50>)
 80009a6:	695b      	ldr	r3, [r3, #20]
 80009a8:	4a11      	ldr	r2, [pc, #68]	@ (80009f0 <send_Error+0x50>)
 80009aa:	f023 0320 	bic.w	r3, r3, #32
 80009ae:	6153      	str	r3, [r2, #20]

  // Send 'E' to LED display
  send_Number(0x79, LED_addr[2]);
 80009b0:	2302      	movs	r3, #2
 80009b2:	4619      	mov	r1, r3
 80009b4:	2079      	movs	r0, #121	@ 0x79
 80009b6:	f7ff ff83 	bl	80008c0 <send_Number>
  HAL_Delay(1);
 80009ba:	2001      	movs	r0, #1
 80009bc:	f000 f928 	bl	8000c10 <HAL_Delay>

  // Send 'r' to LED display
  send_Number(0x50, LED_addr[1]);
 80009c0:	2304      	movs	r3, #4
 80009c2:	4619      	mov	r1, r3
 80009c4:	2050      	movs	r0, #80	@ 0x50
 80009c6:	f7ff ff7b 	bl	80008c0 <send_Number>
  HAL_Delay(1);
 80009ca:	2001      	movs	r0, #1
 80009cc:	f000 f920 	bl	8000c10 <HAL_Delay>

  // Send 'r' to LED display
  send_Number(0x50 | 0x80, LED_addr[0]);
 80009d0:	2308      	movs	r3, #8
 80009d2:	4619      	mov	r1, r3
 80009d4:	20d0      	movs	r0, #208	@ 0xd0
 80009d6:	f7ff ff73 	bl	80008c0 <send_Number>
  HAL_Delay(1);
 80009da:	2001      	movs	r0, #1
 80009dc:	f000 f918 	bl	8000c10 <HAL_Delay>

  // Set Latch to high - End condition
  GPIOB->ODR |= GPIO_ODR_OD5;
 80009e0:	4b03      	ldr	r3, [pc, #12]	@ (80009f0 <send_Error+0x50>)
 80009e2:	695b      	ldr	r3, [r3, #20]
 80009e4:	4a02      	ldr	r2, [pc, #8]	@ (80009f0 <send_Error+0x50>)
 80009e6:	f043 0320 	orr.w	r3, r3, #32
 80009ea:	6153      	str	r3, [r2, #20]
}
 80009ec:	bf00      	nop
 80009ee:	bd80      	pop	{r7, pc}
 80009f0:	40020400 	.word	0x40020400

080009f4 <Error_Handler>:
/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void)
{
 80009f4:	b580      	push	{r7, lr}
 80009f6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80009f8:	b672      	cpsid	i
}
 80009fa:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
  {
    send_Error();
 80009fc:	f7ff ffd0 	bl	80009a0 <send_Error>
 8000a00:	e7fc      	b.n	80009fc <Error_Handler+0x8>
	...

08000a04 <HAL_MspInit>:
 8000a04:	b480      	push	{r7}
 8000a06:	b083      	sub	sp, #12
 8000a08:	af00      	add	r7, sp, #0
 8000a0a:	2300      	movs	r3, #0
 8000a0c:	607b      	str	r3, [r7, #4]
 8000a0e:	4b10      	ldr	r3, [pc, #64]	@ (8000a50 <HAL_MspInit+0x4c>)
 8000a10:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000a12:	4a0f      	ldr	r2, [pc, #60]	@ (8000a50 <HAL_MspInit+0x4c>)
 8000a14:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000a18:	6453      	str	r3, [r2, #68]	@ 0x44
 8000a1a:	4b0d      	ldr	r3, [pc, #52]	@ (8000a50 <HAL_MspInit+0x4c>)
 8000a1c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000a1e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000a22:	607b      	str	r3, [r7, #4]
 8000a24:	687b      	ldr	r3, [r7, #4]
 8000a26:	2300      	movs	r3, #0
 8000a28:	603b      	str	r3, [r7, #0]
 8000a2a:	4b09      	ldr	r3, [pc, #36]	@ (8000a50 <HAL_MspInit+0x4c>)
 8000a2c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000a2e:	4a08      	ldr	r2, [pc, #32]	@ (8000a50 <HAL_MspInit+0x4c>)
 8000a30:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000a34:	6413      	str	r3, [r2, #64]	@ 0x40
 8000a36:	4b06      	ldr	r3, [pc, #24]	@ (8000a50 <HAL_MspInit+0x4c>)
 8000a38:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000a3a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000a3e:	603b      	str	r3, [r7, #0]
 8000a40:	683b      	ldr	r3, [r7, #0]
 8000a42:	bf00      	nop
 8000a44:	370c      	adds	r7, #12
 8000a46:	46bd      	mov	sp, r7
 8000a48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a4c:	4770      	bx	lr
 8000a4e:	bf00      	nop
 8000a50:	40023800 	.word	0x40023800

08000a54 <NMI_Handler>:
 8000a54:	b480      	push	{r7}
 8000a56:	af00      	add	r7, sp, #0
 8000a58:	bf00      	nop
 8000a5a:	e7fd      	b.n	8000a58 <NMI_Handler+0x4>

08000a5c <HardFault_Handler>:
 8000a5c:	b480      	push	{r7}
 8000a5e:	af00      	add	r7, sp, #0
 8000a60:	bf00      	nop
 8000a62:	e7fd      	b.n	8000a60 <HardFault_Handler+0x4>

08000a64 <MemManage_Handler>:
 8000a64:	b480      	push	{r7}
 8000a66:	af00      	add	r7, sp, #0
 8000a68:	bf00      	nop
 8000a6a:	e7fd      	b.n	8000a68 <MemManage_Handler+0x4>

08000a6c <BusFault_Handler>:
 8000a6c:	b480      	push	{r7}
 8000a6e:	af00      	add	r7, sp, #0
 8000a70:	bf00      	nop
 8000a72:	e7fd      	b.n	8000a70 <BusFault_Handler+0x4>

08000a74 <UsageFault_Handler>:
 8000a74:	b480      	push	{r7}
 8000a76:	af00      	add	r7, sp, #0
 8000a78:	bf00      	nop
 8000a7a:	e7fd      	b.n	8000a78 <UsageFault_Handler+0x4>

08000a7c <SVC_Handler>:
 8000a7c:	b480      	push	{r7}
 8000a7e:	af00      	add	r7, sp, #0
 8000a80:	bf00      	nop
 8000a82:	46bd      	mov	sp, r7
 8000a84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a88:	4770      	bx	lr

08000a8a <DebugMon_Handler>:
 8000a8a:	b480      	push	{r7}
 8000a8c:	af00      	add	r7, sp, #0
 8000a8e:	bf00      	nop
 8000a90:	46bd      	mov	sp, r7
 8000a92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a96:	4770      	bx	lr

08000a98 <PendSV_Handler>:
 8000a98:	b480      	push	{r7}
 8000a9a:	af00      	add	r7, sp, #0
 8000a9c:	bf00      	nop
 8000a9e:	46bd      	mov	sp, r7
 8000aa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000aa4:	4770      	bx	lr

08000aa6 <SysTick_Handler>:
 8000aa6:	b580      	push	{r7, lr}
 8000aa8:	af00      	add	r7, sp, #0
 8000aaa:	f000 f891 	bl	8000bd0 <HAL_IncTick>
 8000aae:	bf00      	nop
 8000ab0:	bd80      	pop	{r7, pc}
	...

08000ab4 <SystemInit>:
 8000ab4:	b480      	push	{r7}
 8000ab6:	af00      	add	r7, sp, #0
 8000ab8:	4b06      	ldr	r3, [pc, #24]	@ (8000ad4 <SystemInit+0x20>)
 8000aba:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000abe:	4a05      	ldr	r2, [pc, #20]	@ (8000ad4 <SystemInit+0x20>)
 8000ac0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8000ac4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8000ac8:	bf00      	nop
 8000aca:	46bd      	mov	sp, r7
 8000acc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ad0:	4770      	bx	lr
 8000ad2:	bf00      	nop
 8000ad4:	e000ed00 	.word	0xe000ed00

08000ad8 <Reset_Handler>:
 8000ad8:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000b10 <LoopFillZerobss+0xe>
 8000adc:	f7ff ffea 	bl	8000ab4 <SystemInit>
 8000ae0:	480c      	ldr	r0, [pc, #48]	@ (8000b14 <LoopFillZerobss+0x12>)
 8000ae2:	490d      	ldr	r1, [pc, #52]	@ (8000b18 <LoopFillZerobss+0x16>)
 8000ae4:	4a0d      	ldr	r2, [pc, #52]	@ (8000b1c <LoopFillZerobss+0x1a>)
 8000ae6:	2300      	movs	r3, #0
 8000ae8:	e002      	b.n	8000af0 <LoopCopyDataInit>

08000aea <CopyDataInit>:
 8000aea:	58d4      	ldr	r4, [r2, r3]
 8000aec:	50c4      	str	r4, [r0, r3]
 8000aee:	3304      	adds	r3, #4

08000af0 <LoopCopyDataInit>:
 8000af0:	18c4      	adds	r4, r0, r3
 8000af2:	428c      	cmp	r4, r1
 8000af4:	d3f9      	bcc.n	8000aea <CopyDataInit>
 8000af6:	4a0a      	ldr	r2, [pc, #40]	@ (8000b20 <LoopFillZerobss+0x1e>)
 8000af8:	4c0a      	ldr	r4, [pc, #40]	@ (8000b24 <LoopFillZerobss+0x22>)
 8000afa:	2300      	movs	r3, #0
 8000afc:	e001      	b.n	8000b02 <LoopFillZerobss>

08000afe <FillZerobss>:
 8000afe:	6013      	str	r3, [r2, #0]
 8000b00:	3204      	adds	r2, #4

08000b02 <LoopFillZerobss>:
 8000b02:	42a2      	cmp	r2, r4
 8000b04:	d3fb      	bcc.n	8000afe <FillZerobss>
 8000b06:	f000 fe47 	bl	8001798 <__libc_init_array>
 8000b0a:	f7ff fcf9 	bl	8000500 <main>
 8000b0e:	4770      	bx	lr
 8000b10:	20018000 	.word	0x20018000
 8000b14:	20000000 	.word	0x20000000
 8000b18:	2000005c 	.word	0x2000005c
 8000b1c:	0800192c 	.word	0x0800192c
 8000b20:	2000005c 	.word	0x2000005c
 8000b24:	200001bc 	.word	0x200001bc

08000b28 <ADC_IRQHandler>:
 8000b28:	e7fe      	b.n	8000b28 <ADC_IRQHandler>
	...

08000b2c <HAL_Init>:
 8000b2c:	b580      	push	{r7, lr}
 8000b2e:	af00      	add	r7, sp, #0
 8000b30:	4b0e      	ldr	r3, [pc, #56]	@ (8000b6c <HAL_Init+0x40>)
 8000b32:	681b      	ldr	r3, [r3, #0]
 8000b34:	4a0d      	ldr	r2, [pc, #52]	@ (8000b6c <HAL_Init+0x40>)
 8000b36:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000b3a:	6013      	str	r3, [r2, #0]
 8000b3c:	4b0b      	ldr	r3, [pc, #44]	@ (8000b6c <HAL_Init+0x40>)
 8000b3e:	681b      	ldr	r3, [r3, #0]
 8000b40:	4a0a      	ldr	r2, [pc, #40]	@ (8000b6c <HAL_Init+0x40>)
 8000b42:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000b46:	6013      	str	r3, [r2, #0]
 8000b48:	4b08      	ldr	r3, [pc, #32]	@ (8000b6c <HAL_Init+0x40>)
 8000b4a:	681b      	ldr	r3, [r3, #0]
 8000b4c:	4a07      	ldr	r2, [pc, #28]	@ (8000b6c <HAL_Init+0x40>)
 8000b4e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000b52:	6013      	str	r3, [r2, #0]
 8000b54:	2003      	movs	r0, #3
 8000b56:	f000 f931 	bl	8000dbc <HAL_NVIC_SetPriorityGrouping>
 8000b5a:	200f      	movs	r0, #15
 8000b5c:	f000 f808 	bl	8000b70 <HAL_InitTick>
 8000b60:	f7ff ff50 	bl	8000a04 <HAL_MspInit>
 8000b64:	2300      	movs	r3, #0
 8000b66:	4618      	mov	r0, r3
 8000b68:	bd80      	pop	{r7, pc}
 8000b6a:	bf00      	nop
 8000b6c:	40023c00 	.word	0x40023c00

08000b70 <HAL_InitTick>:
 8000b70:	b580      	push	{r7, lr}
 8000b72:	b082      	sub	sp, #8
 8000b74:	af00      	add	r7, sp, #0
 8000b76:	6078      	str	r0, [r7, #4]
 8000b78:	4b12      	ldr	r3, [pc, #72]	@ (8000bc4 <HAL_InitTick+0x54>)
 8000b7a:	681a      	ldr	r2, [r3, #0]
 8000b7c:	4b12      	ldr	r3, [pc, #72]	@ (8000bc8 <HAL_InitTick+0x58>)
 8000b7e:	781b      	ldrb	r3, [r3, #0]
 8000b80:	4619      	mov	r1, r3
 8000b82:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000b86:	fbb3 f3f1 	udiv	r3, r3, r1
 8000b8a:	fbb2 f3f3 	udiv	r3, r2, r3
 8000b8e:	4618      	mov	r0, r3
 8000b90:	f000 f93b 	bl	8000e0a <HAL_SYSTICK_Config>
 8000b94:	4603      	mov	r3, r0
 8000b96:	2b00      	cmp	r3, #0
 8000b98:	d001      	beq.n	8000b9e <HAL_InitTick+0x2e>
 8000b9a:	2301      	movs	r3, #1
 8000b9c:	e00e      	b.n	8000bbc <HAL_InitTick+0x4c>
 8000b9e:	687b      	ldr	r3, [r7, #4]
 8000ba0:	2b0f      	cmp	r3, #15
 8000ba2:	d80a      	bhi.n	8000bba <HAL_InitTick+0x4a>
 8000ba4:	2200      	movs	r2, #0
 8000ba6:	6879      	ldr	r1, [r7, #4]
 8000ba8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000bac:	f000 f911 	bl	8000dd2 <HAL_NVIC_SetPriority>
 8000bb0:	4a06      	ldr	r2, [pc, #24]	@ (8000bcc <HAL_InitTick+0x5c>)
 8000bb2:	687b      	ldr	r3, [r7, #4]
 8000bb4:	6013      	str	r3, [r2, #0]
 8000bb6:	2300      	movs	r3, #0
 8000bb8:	e000      	b.n	8000bbc <HAL_InitTick+0x4c>
 8000bba:	2301      	movs	r3, #1
 8000bbc:	4618      	mov	r0, r3
 8000bbe:	3708      	adds	r7, #8
 8000bc0:	46bd      	mov	sp, r7
 8000bc2:	bd80      	pop	{r7, pc}
 8000bc4:	20000000 	.word	0x20000000
 8000bc8:	20000008 	.word	0x20000008
 8000bcc:	20000004 	.word	0x20000004

08000bd0 <HAL_IncTick>:
 8000bd0:	b480      	push	{r7}
 8000bd2:	af00      	add	r7, sp, #0
 8000bd4:	4b06      	ldr	r3, [pc, #24]	@ (8000bf0 <HAL_IncTick+0x20>)
 8000bd6:	781b      	ldrb	r3, [r3, #0]
 8000bd8:	461a      	mov	r2, r3
 8000bda:	4b06      	ldr	r3, [pc, #24]	@ (8000bf4 <HAL_IncTick+0x24>)
 8000bdc:	681b      	ldr	r3, [r3, #0]
 8000bde:	4413      	add	r3, r2
 8000be0:	4a04      	ldr	r2, [pc, #16]	@ (8000bf4 <HAL_IncTick+0x24>)
 8000be2:	6013      	str	r3, [r2, #0]
 8000be4:	bf00      	nop
 8000be6:	46bd      	mov	sp, r7
 8000be8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bec:	4770      	bx	lr
 8000bee:	bf00      	nop
 8000bf0:	20000008 	.word	0x20000008
 8000bf4:	20000080 	.word	0x20000080

08000bf8 <HAL_GetTick>:
 8000bf8:	b480      	push	{r7}
 8000bfa:	af00      	add	r7, sp, #0
 8000bfc:	4b03      	ldr	r3, [pc, #12]	@ (8000c0c <HAL_GetTick+0x14>)
 8000bfe:	681b      	ldr	r3, [r3, #0]
 8000c00:	4618      	mov	r0, r3
 8000c02:	46bd      	mov	sp, r7
 8000c04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c08:	4770      	bx	lr
 8000c0a:	bf00      	nop
 8000c0c:	20000080 	.word	0x20000080

08000c10 <HAL_Delay>:
 8000c10:	b580      	push	{r7, lr}
 8000c12:	b084      	sub	sp, #16
 8000c14:	af00      	add	r7, sp, #0
 8000c16:	6078      	str	r0, [r7, #4]
 8000c18:	f7ff ffee 	bl	8000bf8 <HAL_GetTick>
 8000c1c:	60b8      	str	r0, [r7, #8]
 8000c1e:	687b      	ldr	r3, [r7, #4]
 8000c20:	60fb      	str	r3, [r7, #12]
 8000c22:	68fb      	ldr	r3, [r7, #12]
 8000c24:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8000c28:	d005      	beq.n	8000c36 <HAL_Delay+0x26>
 8000c2a:	4b0a      	ldr	r3, [pc, #40]	@ (8000c54 <HAL_Delay+0x44>)
 8000c2c:	781b      	ldrb	r3, [r3, #0]
 8000c2e:	461a      	mov	r2, r3
 8000c30:	68fb      	ldr	r3, [r7, #12]
 8000c32:	4413      	add	r3, r2
 8000c34:	60fb      	str	r3, [r7, #12]
 8000c36:	bf00      	nop
 8000c38:	f7ff ffde 	bl	8000bf8 <HAL_GetTick>
 8000c3c:	4602      	mov	r2, r0
 8000c3e:	68bb      	ldr	r3, [r7, #8]
 8000c40:	1ad3      	subs	r3, r2, r3
 8000c42:	68fa      	ldr	r2, [r7, #12]
 8000c44:	429a      	cmp	r2, r3
 8000c46:	d8f7      	bhi.n	8000c38 <HAL_Delay+0x28>
 8000c48:	bf00      	nop
 8000c4a:	bf00      	nop
 8000c4c:	3710      	adds	r7, #16
 8000c4e:	46bd      	mov	sp, r7
 8000c50:	bd80      	pop	{r7, pc}
 8000c52:	bf00      	nop
 8000c54:	20000008 	.word	0x20000008

08000c58 <__NVIC_SetPriorityGrouping>:
 8000c58:	b480      	push	{r7}
 8000c5a:	b085      	sub	sp, #20
 8000c5c:	af00      	add	r7, sp, #0
 8000c5e:	6078      	str	r0, [r7, #4]
 8000c60:	687b      	ldr	r3, [r7, #4]
 8000c62:	f003 0307 	and.w	r3, r3, #7
 8000c66:	60fb      	str	r3, [r7, #12]
 8000c68:	4b0c      	ldr	r3, [pc, #48]	@ (8000c9c <__NVIC_SetPriorityGrouping+0x44>)
 8000c6a:	68db      	ldr	r3, [r3, #12]
 8000c6c:	60bb      	str	r3, [r7, #8]
 8000c6e:	68ba      	ldr	r2, [r7, #8]
 8000c70:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8000c74:	4013      	ands	r3, r2
 8000c76:	60bb      	str	r3, [r7, #8]
 8000c78:	68fb      	ldr	r3, [r7, #12]
 8000c7a:	021a      	lsls	r2, r3, #8
 8000c7c:	68bb      	ldr	r3, [r7, #8]
 8000c7e:	4313      	orrs	r3, r2
 8000c80:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8000c84:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000c88:	60bb      	str	r3, [r7, #8]
 8000c8a:	4a04      	ldr	r2, [pc, #16]	@ (8000c9c <__NVIC_SetPriorityGrouping+0x44>)
 8000c8c:	68bb      	ldr	r3, [r7, #8]
 8000c8e:	60d3      	str	r3, [r2, #12]
 8000c90:	bf00      	nop
 8000c92:	3714      	adds	r7, #20
 8000c94:	46bd      	mov	sp, r7
 8000c96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c9a:	4770      	bx	lr
 8000c9c:	e000ed00 	.word	0xe000ed00

08000ca0 <__NVIC_GetPriorityGrouping>:
 8000ca0:	b480      	push	{r7}
 8000ca2:	af00      	add	r7, sp, #0
 8000ca4:	4b04      	ldr	r3, [pc, #16]	@ (8000cb8 <__NVIC_GetPriorityGrouping+0x18>)
 8000ca6:	68db      	ldr	r3, [r3, #12]
 8000ca8:	0a1b      	lsrs	r3, r3, #8
 8000caa:	f003 0307 	and.w	r3, r3, #7
 8000cae:	4618      	mov	r0, r3
 8000cb0:	46bd      	mov	sp, r7
 8000cb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cb6:	4770      	bx	lr
 8000cb8:	e000ed00 	.word	0xe000ed00

08000cbc <__NVIC_SetPriority>:
 8000cbc:	b480      	push	{r7}
 8000cbe:	b083      	sub	sp, #12
 8000cc0:	af00      	add	r7, sp, #0
 8000cc2:	4603      	mov	r3, r0
 8000cc4:	6039      	str	r1, [r7, #0]
 8000cc6:	71fb      	strb	r3, [r7, #7]
 8000cc8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000ccc:	2b00      	cmp	r3, #0
 8000cce:	db0a      	blt.n	8000ce6 <__NVIC_SetPriority+0x2a>
 8000cd0:	683b      	ldr	r3, [r7, #0]
 8000cd2:	b2da      	uxtb	r2, r3
 8000cd4:	490c      	ldr	r1, [pc, #48]	@ (8000d08 <__NVIC_SetPriority+0x4c>)
 8000cd6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000cda:	0112      	lsls	r2, r2, #4
 8000cdc:	b2d2      	uxtb	r2, r2
 8000cde:	440b      	add	r3, r1
 8000ce0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8000ce4:	e00a      	b.n	8000cfc <__NVIC_SetPriority+0x40>
 8000ce6:	683b      	ldr	r3, [r7, #0]
 8000ce8:	b2da      	uxtb	r2, r3
 8000cea:	4908      	ldr	r1, [pc, #32]	@ (8000d0c <__NVIC_SetPriority+0x50>)
 8000cec:	79fb      	ldrb	r3, [r7, #7]
 8000cee:	f003 030f 	and.w	r3, r3, #15
 8000cf2:	3b04      	subs	r3, #4
 8000cf4:	0112      	lsls	r2, r2, #4
 8000cf6:	b2d2      	uxtb	r2, r2
 8000cf8:	440b      	add	r3, r1
 8000cfa:	761a      	strb	r2, [r3, #24]
 8000cfc:	bf00      	nop
 8000cfe:	370c      	adds	r7, #12
 8000d00:	46bd      	mov	sp, r7
 8000d02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d06:	4770      	bx	lr
 8000d08:	e000e100 	.word	0xe000e100
 8000d0c:	e000ed00 	.word	0xe000ed00

08000d10 <NVIC_EncodePriority>:
 8000d10:	b480      	push	{r7}
 8000d12:	b089      	sub	sp, #36	@ 0x24
 8000d14:	af00      	add	r7, sp, #0
 8000d16:	60f8      	str	r0, [r7, #12]
 8000d18:	60b9      	str	r1, [r7, #8]
 8000d1a:	607a      	str	r2, [r7, #4]
 8000d1c:	68fb      	ldr	r3, [r7, #12]
 8000d1e:	f003 0307 	and.w	r3, r3, #7
 8000d22:	61fb      	str	r3, [r7, #28]
 8000d24:	69fb      	ldr	r3, [r7, #28]
 8000d26:	f1c3 0307 	rsb	r3, r3, #7
 8000d2a:	2b04      	cmp	r3, #4
 8000d2c:	bf28      	it	cs
 8000d2e:	2304      	movcs	r3, #4
 8000d30:	61bb      	str	r3, [r7, #24]
 8000d32:	69fb      	ldr	r3, [r7, #28]
 8000d34:	3304      	adds	r3, #4
 8000d36:	2b06      	cmp	r3, #6
 8000d38:	d902      	bls.n	8000d40 <NVIC_EncodePriority+0x30>
 8000d3a:	69fb      	ldr	r3, [r7, #28]
 8000d3c:	3b03      	subs	r3, #3
 8000d3e:	e000      	b.n	8000d42 <NVIC_EncodePriority+0x32>
 8000d40:	2300      	movs	r3, #0
 8000d42:	617b      	str	r3, [r7, #20]
 8000d44:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8000d48:	69bb      	ldr	r3, [r7, #24]
 8000d4a:	fa02 f303 	lsl.w	r3, r2, r3
 8000d4e:	43da      	mvns	r2, r3
 8000d50:	68bb      	ldr	r3, [r7, #8]
 8000d52:	401a      	ands	r2, r3
 8000d54:	697b      	ldr	r3, [r7, #20]
 8000d56:	409a      	lsls	r2, r3
 8000d58:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8000d5c:	697b      	ldr	r3, [r7, #20]
 8000d5e:	fa01 f303 	lsl.w	r3, r1, r3
 8000d62:	43d9      	mvns	r1, r3
 8000d64:	687b      	ldr	r3, [r7, #4]
 8000d66:	400b      	ands	r3, r1
 8000d68:	4313      	orrs	r3, r2
 8000d6a:	4618      	mov	r0, r3
 8000d6c:	3724      	adds	r7, #36	@ 0x24
 8000d6e:	46bd      	mov	sp, r7
 8000d70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d74:	4770      	bx	lr
	...

08000d78 <SysTick_Config>:
 8000d78:	b580      	push	{r7, lr}
 8000d7a:	b082      	sub	sp, #8
 8000d7c:	af00      	add	r7, sp, #0
 8000d7e:	6078      	str	r0, [r7, #4]
 8000d80:	687b      	ldr	r3, [r7, #4]
 8000d82:	3b01      	subs	r3, #1
 8000d84:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8000d88:	d301      	bcc.n	8000d8e <SysTick_Config+0x16>
 8000d8a:	2301      	movs	r3, #1
 8000d8c:	e00f      	b.n	8000dae <SysTick_Config+0x36>
 8000d8e:	4a0a      	ldr	r2, [pc, #40]	@ (8000db8 <SysTick_Config+0x40>)
 8000d90:	687b      	ldr	r3, [r7, #4]
 8000d92:	3b01      	subs	r3, #1
 8000d94:	6053      	str	r3, [r2, #4]
 8000d96:	210f      	movs	r1, #15
 8000d98:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000d9c:	f7ff ff8e 	bl	8000cbc <__NVIC_SetPriority>
 8000da0:	4b05      	ldr	r3, [pc, #20]	@ (8000db8 <SysTick_Config+0x40>)
 8000da2:	2200      	movs	r2, #0
 8000da4:	609a      	str	r2, [r3, #8]
 8000da6:	4b04      	ldr	r3, [pc, #16]	@ (8000db8 <SysTick_Config+0x40>)
 8000da8:	2207      	movs	r2, #7
 8000daa:	601a      	str	r2, [r3, #0]
 8000dac:	2300      	movs	r3, #0
 8000dae:	4618      	mov	r0, r3
 8000db0:	3708      	adds	r7, #8
 8000db2:	46bd      	mov	sp, r7
 8000db4:	bd80      	pop	{r7, pc}
 8000db6:	bf00      	nop
 8000db8:	e000e010 	.word	0xe000e010

08000dbc <HAL_NVIC_SetPriorityGrouping>:
 8000dbc:	b580      	push	{r7, lr}
 8000dbe:	b082      	sub	sp, #8
 8000dc0:	af00      	add	r7, sp, #0
 8000dc2:	6078      	str	r0, [r7, #4]
 8000dc4:	6878      	ldr	r0, [r7, #4]
 8000dc6:	f7ff ff47 	bl	8000c58 <__NVIC_SetPriorityGrouping>
 8000dca:	bf00      	nop
 8000dcc:	3708      	adds	r7, #8
 8000dce:	46bd      	mov	sp, r7
 8000dd0:	bd80      	pop	{r7, pc}

08000dd2 <HAL_NVIC_SetPriority>:
 8000dd2:	b580      	push	{r7, lr}
 8000dd4:	b086      	sub	sp, #24
 8000dd6:	af00      	add	r7, sp, #0
 8000dd8:	4603      	mov	r3, r0
 8000dda:	60b9      	str	r1, [r7, #8]
 8000ddc:	607a      	str	r2, [r7, #4]
 8000dde:	73fb      	strb	r3, [r7, #15]
 8000de0:	2300      	movs	r3, #0
 8000de2:	617b      	str	r3, [r7, #20]
 8000de4:	f7ff ff5c 	bl	8000ca0 <__NVIC_GetPriorityGrouping>
 8000de8:	6178      	str	r0, [r7, #20]
 8000dea:	687a      	ldr	r2, [r7, #4]
 8000dec:	68b9      	ldr	r1, [r7, #8]
 8000dee:	6978      	ldr	r0, [r7, #20]
 8000df0:	f7ff ff8e 	bl	8000d10 <NVIC_EncodePriority>
 8000df4:	4602      	mov	r2, r0
 8000df6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000dfa:	4611      	mov	r1, r2
 8000dfc:	4618      	mov	r0, r3
 8000dfe:	f7ff ff5d 	bl	8000cbc <__NVIC_SetPriority>
 8000e02:	bf00      	nop
 8000e04:	3718      	adds	r7, #24
 8000e06:	46bd      	mov	sp, r7
 8000e08:	bd80      	pop	{r7, pc}

08000e0a <HAL_SYSTICK_Config>:
 8000e0a:	b580      	push	{r7, lr}
 8000e0c:	b082      	sub	sp, #8
 8000e0e:	af00      	add	r7, sp, #0
 8000e10:	6078      	str	r0, [r7, #4]
 8000e12:	6878      	ldr	r0, [r7, #4]
 8000e14:	f7ff ffb0 	bl	8000d78 <SysTick_Config>
 8000e18:	4603      	mov	r3, r0
 8000e1a:	4618      	mov	r0, r3
 8000e1c:	3708      	adds	r7, #8
 8000e1e:	46bd      	mov	sp, r7
 8000e20:	bd80      	pop	{r7, pc}
	...

08000e24 <HAL_RCC_OscConfig>:
 8000e24:	b580      	push	{r7, lr}
 8000e26:	b086      	sub	sp, #24
 8000e28:	af00      	add	r7, sp, #0
 8000e2a:	6078      	str	r0, [r7, #4]
 8000e2c:	687b      	ldr	r3, [r7, #4]
 8000e2e:	2b00      	cmp	r3, #0
 8000e30:	d101      	bne.n	8000e36 <HAL_RCC_OscConfig+0x12>
 8000e32:	2301      	movs	r3, #1
 8000e34:	e267      	b.n	8001306 <HAL_RCC_OscConfig+0x4e2>
 8000e36:	687b      	ldr	r3, [r7, #4]
 8000e38:	681b      	ldr	r3, [r3, #0]
 8000e3a:	f003 0301 	and.w	r3, r3, #1
 8000e3e:	2b00      	cmp	r3, #0
 8000e40:	d075      	beq.n	8000f2e <HAL_RCC_OscConfig+0x10a>
 8000e42:	4b88      	ldr	r3, [pc, #544]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000e44:	689b      	ldr	r3, [r3, #8]
 8000e46:	f003 030c 	and.w	r3, r3, #12
 8000e4a:	2b04      	cmp	r3, #4
 8000e4c:	d00c      	beq.n	8000e68 <HAL_RCC_OscConfig+0x44>
 8000e4e:	4b85      	ldr	r3, [pc, #532]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000e50:	689b      	ldr	r3, [r3, #8]
 8000e52:	f003 030c 	and.w	r3, r3, #12
 8000e56:	2b08      	cmp	r3, #8
 8000e58:	d112      	bne.n	8000e80 <HAL_RCC_OscConfig+0x5c>
 8000e5a:	4b82      	ldr	r3, [pc, #520]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000e5c:	685b      	ldr	r3, [r3, #4]
 8000e5e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8000e62:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8000e66:	d10b      	bne.n	8000e80 <HAL_RCC_OscConfig+0x5c>
 8000e68:	4b7e      	ldr	r3, [pc, #504]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000e6a:	681b      	ldr	r3, [r3, #0]
 8000e6c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000e70:	2b00      	cmp	r3, #0
 8000e72:	d05b      	beq.n	8000f2c <HAL_RCC_OscConfig+0x108>
 8000e74:	687b      	ldr	r3, [r7, #4]
 8000e76:	685b      	ldr	r3, [r3, #4]
 8000e78:	2b00      	cmp	r3, #0
 8000e7a:	d157      	bne.n	8000f2c <HAL_RCC_OscConfig+0x108>
 8000e7c:	2301      	movs	r3, #1
 8000e7e:	e242      	b.n	8001306 <HAL_RCC_OscConfig+0x4e2>
 8000e80:	687b      	ldr	r3, [r7, #4]
 8000e82:	685b      	ldr	r3, [r3, #4]
 8000e84:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8000e88:	d106      	bne.n	8000e98 <HAL_RCC_OscConfig+0x74>
 8000e8a:	4b76      	ldr	r3, [pc, #472]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000e8c:	681b      	ldr	r3, [r3, #0]
 8000e8e:	4a75      	ldr	r2, [pc, #468]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000e90:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000e94:	6013      	str	r3, [r2, #0]
 8000e96:	e01d      	b.n	8000ed4 <HAL_RCC_OscConfig+0xb0>
 8000e98:	687b      	ldr	r3, [r7, #4]
 8000e9a:	685b      	ldr	r3, [r3, #4]
 8000e9c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8000ea0:	d10c      	bne.n	8000ebc <HAL_RCC_OscConfig+0x98>
 8000ea2:	4b70      	ldr	r3, [pc, #448]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000ea4:	681b      	ldr	r3, [r3, #0]
 8000ea6:	4a6f      	ldr	r2, [pc, #444]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000ea8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8000eac:	6013      	str	r3, [r2, #0]
 8000eae:	4b6d      	ldr	r3, [pc, #436]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000eb0:	681b      	ldr	r3, [r3, #0]
 8000eb2:	4a6c      	ldr	r2, [pc, #432]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000eb4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000eb8:	6013      	str	r3, [r2, #0]
 8000eba:	e00b      	b.n	8000ed4 <HAL_RCC_OscConfig+0xb0>
 8000ebc:	4b69      	ldr	r3, [pc, #420]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000ebe:	681b      	ldr	r3, [r3, #0]
 8000ec0:	4a68      	ldr	r2, [pc, #416]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000ec2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8000ec6:	6013      	str	r3, [r2, #0]
 8000ec8:	4b66      	ldr	r3, [pc, #408]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000eca:	681b      	ldr	r3, [r3, #0]
 8000ecc:	4a65      	ldr	r2, [pc, #404]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000ece:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8000ed2:	6013      	str	r3, [r2, #0]
 8000ed4:	687b      	ldr	r3, [r7, #4]
 8000ed6:	685b      	ldr	r3, [r3, #4]
 8000ed8:	2b00      	cmp	r3, #0
 8000eda:	d013      	beq.n	8000f04 <HAL_RCC_OscConfig+0xe0>
 8000edc:	f7ff fe8c 	bl	8000bf8 <HAL_GetTick>
 8000ee0:	6138      	str	r0, [r7, #16]
 8000ee2:	e008      	b.n	8000ef6 <HAL_RCC_OscConfig+0xd2>
 8000ee4:	f7ff fe88 	bl	8000bf8 <HAL_GetTick>
 8000ee8:	4602      	mov	r2, r0
 8000eea:	693b      	ldr	r3, [r7, #16]
 8000eec:	1ad3      	subs	r3, r2, r3
 8000eee:	2b64      	cmp	r3, #100	@ 0x64
 8000ef0:	d901      	bls.n	8000ef6 <HAL_RCC_OscConfig+0xd2>
 8000ef2:	2303      	movs	r3, #3
 8000ef4:	e207      	b.n	8001306 <HAL_RCC_OscConfig+0x4e2>
 8000ef6:	4b5b      	ldr	r3, [pc, #364]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000ef8:	681b      	ldr	r3, [r3, #0]
 8000efa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000efe:	2b00      	cmp	r3, #0
 8000f00:	d0f0      	beq.n	8000ee4 <HAL_RCC_OscConfig+0xc0>
 8000f02:	e014      	b.n	8000f2e <HAL_RCC_OscConfig+0x10a>
 8000f04:	f7ff fe78 	bl	8000bf8 <HAL_GetTick>
 8000f08:	6138      	str	r0, [r7, #16]
 8000f0a:	e008      	b.n	8000f1e <HAL_RCC_OscConfig+0xfa>
 8000f0c:	f7ff fe74 	bl	8000bf8 <HAL_GetTick>
 8000f10:	4602      	mov	r2, r0
 8000f12:	693b      	ldr	r3, [r7, #16]
 8000f14:	1ad3      	subs	r3, r2, r3
 8000f16:	2b64      	cmp	r3, #100	@ 0x64
 8000f18:	d901      	bls.n	8000f1e <HAL_RCC_OscConfig+0xfa>
 8000f1a:	2303      	movs	r3, #3
 8000f1c:	e1f3      	b.n	8001306 <HAL_RCC_OscConfig+0x4e2>
 8000f1e:	4b51      	ldr	r3, [pc, #324]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000f20:	681b      	ldr	r3, [r3, #0]
 8000f22:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000f26:	2b00      	cmp	r3, #0
 8000f28:	d1f0      	bne.n	8000f0c <HAL_RCC_OscConfig+0xe8>
 8000f2a:	e000      	b.n	8000f2e <HAL_RCC_OscConfig+0x10a>
 8000f2c:	bf00      	nop
 8000f2e:	687b      	ldr	r3, [r7, #4]
 8000f30:	681b      	ldr	r3, [r3, #0]
 8000f32:	f003 0302 	and.w	r3, r3, #2
 8000f36:	2b00      	cmp	r3, #0
 8000f38:	d063      	beq.n	8001002 <HAL_RCC_OscConfig+0x1de>
 8000f3a:	4b4a      	ldr	r3, [pc, #296]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000f3c:	689b      	ldr	r3, [r3, #8]
 8000f3e:	f003 030c 	and.w	r3, r3, #12
 8000f42:	2b00      	cmp	r3, #0
 8000f44:	d00b      	beq.n	8000f5e <HAL_RCC_OscConfig+0x13a>
 8000f46:	4b47      	ldr	r3, [pc, #284]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000f48:	689b      	ldr	r3, [r3, #8]
 8000f4a:	f003 030c 	and.w	r3, r3, #12
 8000f4e:	2b08      	cmp	r3, #8
 8000f50:	d11c      	bne.n	8000f8c <HAL_RCC_OscConfig+0x168>
 8000f52:	4b44      	ldr	r3, [pc, #272]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000f54:	685b      	ldr	r3, [r3, #4]
 8000f56:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8000f5a:	2b00      	cmp	r3, #0
 8000f5c:	d116      	bne.n	8000f8c <HAL_RCC_OscConfig+0x168>
 8000f5e:	4b41      	ldr	r3, [pc, #260]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000f60:	681b      	ldr	r3, [r3, #0]
 8000f62:	f003 0302 	and.w	r3, r3, #2
 8000f66:	2b00      	cmp	r3, #0
 8000f68:	d005      	beq.n	8000f76 <HAL_RCC_OscConfig+0x152>
 8000f6a:	687b      	ldr	r3, [r7, #4]
 8000f6c:	68db      	ldr	r3, [r3, #12]
 8000f6e:	2b01      	cmp	r3, #1
 8000f70:	d001      	beq.n	8000f76 <HAL_RCC_OscConfig+0x152>
 8000f72:	2301      	movs	r3, #1
 8000f74:	e1c7      	b.n	8001306 <HAL_RCC_OscConfig+0x4e2>
 8000f76:	4b3b      	ldr	r3, [pc, #236]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000f78:	681b      	ldr	r3, [r3, #0]
 8000f7a:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8000f7e:	687b      	ldr	r3, [r7, #4]
 8000f80:	691b      	ldr	r3, [r3, #16]
 8000f82:	00db      	lsls	r3, r3, #3
 8000f84:	4937      	ldr	r1, [pc, #220]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000f86:	4313      	orrs	r3, r2
 8000f88:	600b      	str	r3, [r1, #0]
 8000f8a:	e03a      	b.n	8001002 <HAL_RCC_OscConfig+0x1de>
 8000f8c:	687b      	ldr	r3, [r7, #4]
 8000f8e:	68db      	ldr	r3, [r3, #12]
 8000f90:	2b00      	cmp	r3, #0
 8000f92:	d020      	beq.n	8000fd6 <HAL_RCC_OscConfig+0x1b2>
 8000f94:	4b34      	ldr	r3, [pc, #208]	@ (8001068 <HAL_RCC_OscConfig+0x244>)
 8000f96:	2201      	movs	r2, #1
 8000f98:	601a      	str	r2, [r3, #0]
 8000f9a:	f7ff fe2d 	bl	8000bf8 <HAL_GetTick>
 8000f9e:	6138      	str	r0, [r7, #16]
 8000fa0:	e008      	b.n	8000fb4 <HAL_RCC_OscConfig+0x190>
 8000fa2:	f7ff fe29 	bl	8000bf8 <HAL_GetTick>
 8000fa6:	4602      	mov	r2, r0
 8000fa8:	693b      	ldr	r3, [r7, #16]
 8000faa:	1ad3      	subs	r3, r2, r3
 8000fac:	2b02      	cmp	r3, #2
 8000fae:	d901      	bls.n	8000fb4 <HAL_RCC_OscConfig+0x190>
 8000fb0:	2303      	movs	r3, #3
 8000fb2:	e1a8      	b.n	8001306 <HAL_RCC_OscConfig+0x4e2>
 8000fb4:	4b2b      	ldr	r3, [pc, #172]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000fb6:	681b      	ldr	r3, [r3, #0]
 8000fb8:	f003 0302 	and.w	r3, r3, #2
 8000fbc:	2b00      	cmp	r3, #0
 8000fbe:	d0f0      	beq.n	8000fa2 <HAL_RCC_OscConfig+0x17e>
 8000fc0:	4b28      	ldr	r3, [pc, #160]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000fc2:	681b      	ldr	r3, [r3, #0]
 8000fc4:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8000fc8:	687b      	ldr	r3, [r7, #4]
 8000fca:	691b      	ldr	r3, [r3, #16]
 8000fcc:	00db      	lsls	r3, r3, #3
 8000fce:	4925      	ldr	r1, [pc, #148]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000fd0:	4313      	orrs	r3, r2
 8000fd2:	600b      	str	r3, [r1, #0]
 8000fd4:	e015      	b.n	8001002 <HAL_RCC_OscConfig+0x1de>
 8000fd6:	4b24      	ldr	r3, [pc, #144]	@ (8001068 <HAL_RCC_OscConfig+0x244>)
 8000fd8:	2200      	movs	r2, #0
 8000fda:	601a      	str	r2, [r3, #0]
 8000fdc:	f7ff fe0c 	bl	8000bf8 <HAL_GetTick>
 8000fe0:	6138      	str	r0, [r7, #16]
 8000fe2:	e008      	b.n	8000ff6 <HAL_RCC_OscConfig+0x1d2>
 8000fe4:	f7ff fe08 	bl	8000bf8 <HAL_GetTick>
 8000fe8:	4602      	mov	r2, r0
 8000fea:	693b      	ldr	r3, [r7, #16]
 8000fec:	1ad3      	subs	r3, r2, r3
 8000fee:	2b02      	cmp	r3, #2
 8000ff0:	d901      	bls.n	8000ff6 <HAL_RCC_OscConfig+0x1d2>
 8000ff2:	2303      	movs	r3, #3
 8000ff4:	e187      	b.n	8001306 <HAL_RCC_OscConfig+0x4e2>
 8000ff6:	4b1b      	ldr	r3, [pc, #108]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8000ff8:	681b      	ldr	r3, [r3, #0]
 8000ffa:	f003 0302 	and.w	r3, r3, #2
 8000ffe:	2b00      	cmp	r3, #0
 8001000:	d1f0      	bne.n	8000fe4 <HAL_RCC_OscConfig+0x1c0>
 8001002:	687b      	ldr	r3, [r7, #4]
 8001004:	681b      	ldr	r3, [r3, #0]
 8001006:	f003 0308 	and.w	r3, r3, #8
 800100a:	2b00      	cmp	r3, #0
 800100c:	d036      	beq.n	800107c <HAL_RCC_OscConfig+0x258>
 800100e:	687b      	ldr	r3, [r7, #4]
 8001010:	695b      	ldr	r3, [r3, #20]
 8001012:	2b00      	cmp	r3, #0
 8001014:	d016      	beq.n	8001044 <HAL_RCC_OscConfig+0x220>
 8001016:	4b15      	ldr	r3, [pc, #84]	@ (800106c <HAL_RCC_OscConfig+0x248>)
 8001018:	2201      	movs	r2, #1
 800101a:	601a      	str	r2, [r3, #0]
 800101c:	f7ff fdec 	bl	8000bf8 <HAL_GetTick>
 8001020:	6138      	str	r0, [r7, #16]
 8001022:	e008      	b.n	8001036 <HAL_RCC_OscConfig+0x212>
 8001024:	f7ff fde8 	bl	8000bf8 <HAL_GetTick>
 8001028:	4602      	mov	r2, r0
 800102a:	693b      	ldr	r3, [r7, #16]
 800102c:	1ad3      	subs	r3, r2, r3
 800102e:	2b02      	cmp	r3, #2
 8001030:	d901      	bls.n	8001036 <HAL_RCC_OscConfig+0x212>
 8001032:	2303      	movs	r3, #3
 8001034:	e167      	b.n	8001306 <HAL_RCC_OscConfig+0x4e2>
 8001036:	4b0b      	ldr	r3, [pc, #44]	@ (8001064 <HAL_RCC_OscConfig+0x240>)
 8001038:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800103a:	f003 0302 	and.w	r3, r3, #2
 800103e:	2b00      	cmp	r3, #0
 8001040:	d0f0      	beq.n	8001024 <HAL_RCC_OscConfig+0x200>
 8001042:	e01b      	b.n	800107c <HAL_RCC_OscConfig+0x258>
 8001044:	4b09      	ldr	r3, [pc, #36]	@ (800106c <HAL_RCC_OscConfig+0x248>)
 8001046:	2200      	movs	r2, #0
 8001048:	601a      	str	r2, [r3, #0]
 800104a:	f7ff fdd5 	bl	8000bf8 <HAL_GetTick>
 800104e:	6138      	str	r0, [r7, #16]
 8001050:	e00e      	b.n	8001070 <HAL_RCC_OscConfig+0x24c>
 8001052:	f7ff fdd1 	bl	8000bf8 <HAL_GetTick>
 8001056:	4602      	mov	r2, r0
 8001058:	693b      	ldr	r3, [r7, #16]
 800105a:	1ad3      	subs	r3, r2, r3
 800105c:	2b02      	cmp	r3, #2
 800105e:	d907      	bls.n	8001070 <HAL_RCC_OscConfig+0x24c>
 8001060:	2303      	movs	r3, #3
 8001062:	e150      	b.n	8001306 <HAL_RCC_OscConfig+0x4e2>
 8001064:	40023800 	.word	0x40023800
 8001068:	42470000 	.word	0x42470000
 800106c:	42470e80 	.word	0x42470e80
 8001070:	4b88      	ldr	r3, [pc, #544]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 8001072:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8001074:	f003 0302 	and.w	r3, r3, #2
 8001078:	2b00      	cmp	r3, #0
 800107a:	d1ea      	bne.n	8001052 <HAL_RCC_OscConfig+0x22e>
 800107c:	687b      	ldr	r3, [r7, #4]
 800107e:	681b      	ldr	r3, [r3, #0]
 8001080:	f003 0304 	and.w	r3, r3, #4
 8001084:	2b00      	cmp	r3, #0
 8001086:	f000 8097 	beq.w	80011b8 <HAL_RCC_OscConfig+0x394>
 800108a:	2300      	movs	r3, #0
 800108c:	75fb      	strb	r3, [r7, #23]
 800108e:	4b81      	ldr	r3, [pc, #516]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 8001090:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001092:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001096:	2b00      	cmp	r3, #0
 8001098:	d10f      	bne.n	80010ba <HAL_RCC_OscConfig+0x296>
 800109a:	2300      	movs	r3, #0
 800109c:	60bb      	str	r3, [r7, #8]
 800109e:	4b7d      	ldr	r3, [pc, #500]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 80010a0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80010a2:	4a7c      	ldr	r2, [pc, #496]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 80010a4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80010a8:	6413      	str	r3, [r2, #64]	@ 0x40
 80010aa:	4b7a      	ldr	r3, [pc, #488]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 80010ac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80010ae:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80010b2:	60bb      	str	r3, [r7, #8]
 80010b4:	68bb      	ldr	r3, [r7, #8]
 80010b6:	2301      	movs	r3, #1
 80010b8:	75fb      	strb	r3, [r7, #23]
 80010ba:	4b77      	ldr	r3, [pc, #476]	@ (8001298 <HAL_RCC_OscConfig+0x474>)
 80010bc:	681b      	ldr	r3, [r3, #0]
 80010be:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80010c2:	2b00      	cmp	r3, #0
 80010c4:	d118      	bne.n	80010f8 <HAL_RCC_OscConfig+0x2d4>
 80010c6:	4b74      	ldr	r3, [pc, #464]	@ (8001298 <HAL_RCC_OscConfig+0x474>)
 80010c8:	681b      	ldr	r3, [r3, #0]
 80010ca:	4a73      	ldr	r2, [pc, #460]	@ (8001298 <HAL_RCC_OscConfig+0x474>)
 80010cc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80010d0:	6013      	str	r3, [r2, #0]
 80010d2:	f7ff fd91 	bl	8000bf8 <HAL_GetTick>
 80010d6:	6138      	str	r0, [r7, #16]
 80010d8:	e008      	b.n	80010ec <HAL_RCC_OscConfig+0x2c8>
 80010da:	f7ff fd8d 	bl	8000bf8 <HAL_GetTick>
 80010de:	4602      	mov	r2, r0
 80010e0:	693b      	ldr	r3, [r7, #16]
 80010e2:	1ad3      	subs	r3, r2, r3
 80010e4:	2b02      	cmp	r3, #2
 80010e6:	d901      	bls.n	80010ec <HAL_RCC_OscConfig+0x2c8>
 80010e8:	2303      	movs	r3, #3
 80010ea:	e10c      	b.n	8001306 <HAL_RCC_OscConfig+0x4e2>
 80010ec:	4b6a      	ldr	r3, [pc, #424]	@ (8001298 <HAL_RCC_OscConfig+0x474>)
 80010ee:	681b      	ldr	r3, [r3, #0]
 80010f0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80010f4:	2b00      	cmp	r3, #0
 80010f6:	d0f0      	beq.n	80010da <HAL_RCC_OscConfig+0x2b6>
 80010f8:	687b      	ldr	r3, [r7, #4]
 80010fa:	689b      	ldr	r3, [r3, #8]
 80010fc:	2b01      	cmp	r3, #1
 80010fe:	d106      	bne.n	800110e <HAL_RCC_OscConfig+0x2ea>
 8001100:	4b64      	ldr	r3, [pc, #400]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 8001102:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001104:	4a63      	ldr	r2, [pc, #396]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 8001106:	f043 0301 	orr.w	r3, r3, #1
 800110a:	6713      	str	r3, [r2, #112]	@ 0x70
 800110c:	e01c      	b.n	8001148 <HAL_RCC_OscConfig+0x324>
 800110e:	687b      	ldr	r3, [r7, #4]
 8001110:	689b      	ldr	r3, [r3, #8]
 8001112:	2b05      	cmp	r3, #5
 8001114:	d10c      	bne.n	8001130 <HAL_RCC_OscConfig+0x30c>
 8001116:	4b5f      	ldr	r3, [pc, #380]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 8001118:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800111a:	4a5e      	ldr	r2, [pc, #376]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 800111c:	f043 0304 	orr.w	r3, r3, #4
 8001120:	6713      	str	r3, [r2, #112]	@ 0x70
 8001122:	4b5c      	ldr	r3, [pc, #368]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 8001124:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001126:	4a5b      	ldr	r2, [pc, #364]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 8001128:	f043 0301 	orr.w	r3, r3, #1
 800112c:	6713      	str	r3, [r2, #112]	@ 0x70
 800112e:	e00b      	b.n	8001148 <HAL_RCC_OscConfig+0x324>
 8001130:	4b58      	ldr	r3, [pc, #352]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 8001132:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001134:	4a57      	ldr	r2, [pc, #348]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 8001136:	f023 0301 	bic.w	r3, r3, #1
 800113a:	6713      	str	r3, [r2, #112]	@ 0x70
 800113c:	4b55      	ldr	r3, [pc, #340]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 800113e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001140:	4a54      	ldr	r2, [pc, #336]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 8001142:	f023 0304 	bic.w	r3, r3, #4
 8001146:	6713      	str	r3, [r2, #112]	@ 0x70
 8001148:	687b      	ldr	r3, [r7, #4]
 800114a:	689b      	ldr	r3, [r3, #8]
 800114c:	2b00      	cmp	r3, #0
 800114e:	d015      	beq.n	800117c <HAL_RCC_OscConfig+0x358>
 8001150:	f7ff fd52 	bl	8000bf8 <HAL_GetTick>
 8001154:	6138      	str	r0, [r7, #16]
 8001156:	e00a      	b.n	800116e <HAL_RCC_OscConfig+0x34a>
 8001158:	f7ff fd4e 	bl	8000bf8 <HAL_GetTick>
 800115c:	4602      	mov	r2, r0
 800115e:	693b      	ldr	r3, [r7, #16]
 8001160:	1ad3      	subs	r3, r2, r3
 8001162:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001166:	4293      	cmp	r3, r2
 8001168:	d901      	bls.n	800116e <HAL_RCC_OscConfig+0x34a>
 800116a:	2303      	movs	r3, #3
 800116c:	e0cb      	b.n	8001306 <HAL_RCC_OscConfig+0x4e2>
 800116e:	4b49      	ldr	r3, [pc, #292]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 8001170:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001172:	f003 0302 	and.w	r3, r3, #2
 8001176:	2b00      	cmp	r3, #0
 8001178:	d0ee      	beq.n	8001158 <HAL_RCC_OscConfig+0x334>
 800117a:	e014      	b.n	80011a6 <HAL_RCC_OscConfig+0x382>
 800117c:	f7ff fd3c 	bl	8000bf8 <HAL_GetTick>
 8001180:	6138      	str	r0, [r7, #16]
 8001182:	e00a      	b.n	800119a <HAL_RCC_OscConfig+0x376>
 8001184:	f7ff fd38 	bl	8000bf8 <HAL_GetTick>
 8001188:	4602      	mov	r2, r0
 800118a:	693b      	ldr	r3, [r7, #16]
 800118c:	1ad3      	subs	r3, r2, r3
 800118e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001192:	4293      	cmp	r3, r2
 8001194:	d901      	bls.n	800119a <HAL_RCC_OscConfig+0x376>
 8001196:	2303      	movs	r3, #3
 8001198:	e0b5      	b.n	8001306 <HAL_RCC_OscConfig+0x4e2>
 800119a:	4b3e      	ldr	r3, [pc, #248]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 800119c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800119e:	f003 0302 	and.w	r3, r3, #2
 80011a2:	2b00      	cmp	r3, #0
 80011a4:	d1ee      	bne.n	8001184 <HAL_RCC_OscConfig+0x360>
 80011a6:	7dfb      	ldrb	r3, [r7, #23]
 80011a8:	2b01      	cmp	r3, #1
 80011aa:	d105      	bne.n	80011b8 <HAL_RCC_OscConfig+0x394>
 80011ac:	4b39      	ldr	r3, [pc, #228]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 80011ae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80011b0:	4a38      	ldr	r2, [pc, #224]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 80011b2:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80011b6:	6413      	str	r3, [r2, #64]	@ 0x40
 80011b8:	687b      	ldr	r3, [r7, #4]
 80011ba:	699b      	ldr	r3, [r3, #24]
 80011bc:	2b00      	cmp	r3, #0
 80011be:	f000 80a1 	beq.w	8001304 <HAL_RCC_OscConfig+0x4e0>
 80011c2:	4b34      	ldr	r3, [pc, #208]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 80011c4:	689b      	ldr	r3, [r3, #8]
 80011c6:	f003 030c 	and.w	r3, r3, #12
 80011ca:	2b08      	cmp	r3, #8
 80011cc:	d05c      	beq.n	8001288 <HAL_RCC_OscConfig+0x464>
 80011ce:	687b      	ldr	r3, [r7, #4]
 80011d0:	699b      	ldr	r3, [r3, #24]
 80011d2:	2b02      	cmp	r3, #2
 80011d4:	d141      	bne.n	800125a <HAL_RCC_OscConfig+0x436>
 80011d6:	4b31      	ldr	r3, [pc, #196]	@ (800129c <HAL_RCC_OscConfig+0x478>)
 80011d8:	2200      	movs	r2, #0
 80011da:	601a      	str	r2, [r3, #0]
 80011dc:	f7ff fd0c 	bl	8000bf8 <HAL_GetTick>
 80011e0:	6138      	str	r0, [r7, #16]
 80011e2:	e008      	b.n	80011f6 <HAL_RCC_OscConfig+0x3d2>
 80011e4:	f7ff fd08 	bl	8000bf8 <HAL_GetTick>
 80011e8:	4602      	mov	r2, r0
 80011ea:	693b      	ldr	r3, [r7, #16]
 80011ec:	1ad3      	subs	r3, r2, r3
 80011ee:	2b02      	cmp	r3, #2
 80011f0:	d901      	bls.n	80011f6 <HAL_RCC_OscConfig+0x3d2>
 80011f2:	2303      	movs	r3, #3
 80011f4:	e087      	b.n	8001306 <HAL_RCC_OscConfig+0x4e2>
 80011f6:	4b27      	ldr	r3, [pc, #156]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 80011f8:	681b      	ldr	r3, [r3, #0]
 80011fa:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80011fe:	2b00      	cmp	r3, #0
 8001200:	d1f0      	bne.n	80011e4 <HAL_RCC_OscConfig+0x3c0>
 8001202:	687b      	ldr	r3, [r7, #4]
 8001204:	69da      	ldr	r2, [r3, #28]
 8001206:	687b      	ldr	r3, [r7, #4]
 8001208:	6a1b      	ldr	r3, [r3, #32]
 800120a:	431a      	orrs	r2, r3
 800120c:	687b      	ldr	r3, [r7, #4]
 800120e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001210:	019b      	lsls	r3, r3, #6
 8001212:	431a      	orrs	r2, r3
 8001214:	687b      	ldr	r3, [r7, #4]
 8001216:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001218:	085b      	lsrs	r3, r3, #1
 800121a:	3b01      	subs	r3, #1
 800121c:	041b      	lsls	r3, r3, #16
 800121e:	431a      	orrs	r2, r3
 8001220:	687b      	ldr	r3, [r7, #4]
 8001222:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001224:	061b      	lsls	r3, r3, #24
 8001226:	491b      	ldr	r1, [pc, #108]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 8001228:	4313      	orrs	r3, r2
 800122a:	604b      	str	r3, [r1, #4]
 800122c:	4b1b      	ldr	r3, [pc, #108]	@ (800129c <HAL_RCC_OscConfig+0x478>)
 800122e:	2201      	movs	r2, #1
 8001230:	601a      	str	r2, [r3, #0]
 8001232:	f7ff fce1 	bl	8000bf8 <HAL_GetTick>
 8001236:	6138      	str	r0, [r7, #16]
 8001238:	e008      	b.n	800124c <HAL_RCC_OscConfig+0x428>
 800123a:	f7ff fcdd 	bl	8000bf8 <HAL_GetTick>
 800123e:	4602      	mov	r2, r0
 8001240:	693b      	ldr	r3, [r7, #16]
 8001242:	1ad3      	subs	r3, r2, r3
 8001244:	2b02      	cmp	r3, #2
 8001246:	d901      	bls.n	800124c <HAL_RCC_OscConfig+0x428>
 8001248:	2303      	movs	r3, #3
 800124a:	e05c      	b.n	8001306 <HAL_RCC_OscConfig+0x4e2>
 800124c:	4b11      	ldr	r3, [pc, #68]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 800124e:	681b      	ldr	r3, [r3, #0]
 8001250:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001254:	2b00      	cmp	r3, #0
 8001256:	d0f0      	beq.n	800123a <HAL_RCC_OscConfig+0x416>
 8001258:	e054      	b.n	8001304 <HAL_RCC_OscConfig+0x4e0>
 800125a:	4b10      	ldr	r3, [pc, #64]	@ (800129c <HAL_RCC_OscConfig+0x478>)
 800125c:	2200      	movs	r2, #0
 800125e:	601a      	str	r2, [r3, #0]
 8001260:	f7ff fcca 	bl	8000bf8 <HAL_GetTick>
 8001264:	6138      	str	r0, [r7, #16]
 8001266:	e008      	b.n	800127a <HAL_RCC_OscConfig+0x456>
 8001268:	f7ff fcc6 	bl	8000bf8 <HAL_GetTick>
 800126c:	4602      	mov	r2, r0
 800126e:	693b      	ldr	r3, [r7, #16]
 8001270:	1ad3      	subs	r3, r2, r3
 8001272:	2b02      	cmp	r3, #2
 8001274:	d901      	bls.n	800127a <HAL_RCC_OscConfig+0x456>
 8001276:	2303      	movs	r3, #3
 8001278:	e045      	b.n	8001306 <HAL_RCC_OscConfig+0x4e2>
 800127a:	4b06      	ldr	r3, [pc, #24]	@ (8001294 <HAL_RCC_OscConfig+0x470>)
 800127c:	681b      	ldr	r3, [r3, #0]
 800127e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001282:	2b00      	cmp	r3, #0
 8001284:	d1f0      	bne.n	8001268 <HAL_RCC_OscConfig+0x444>
 8001286:	e03d      	b.n	8001304 <HAL_RCC_OscConfig+0x4e0>
 8001288:	687b      	ldr	r3, [r7, #4]
 800128a:	699b      	ldr	r3, [r3, #24]
 800128c:	2b01      	cmp	r3, #1
 800128e:	d107      	bne.n	80012a0 <HAL_RCC_OscConfig+0x47c>
 8001290:	2301      	movs	r3, #1
 8001292:	e038      	b.n	8001306 <HAL_RCC_OscConfig+0x4e2>
 8001294:	40023800 	.word	0x40023800
 8001298:	40007000 	.word	0x40007000
 800129c:	42470060 	.word	0x42470060
 80012a0:	4b1b      	ldr	r3, [pc, #108]	@ (8001310 <HAL_RCC_OscConfig+0x4ec>)
 80012a2:	685b      	ldr	r3, [r3, #4]
 80012a4:	60fb      	str	r3, [r7, #12]
 80012a6:	687b      	ldr	r3, [r7, #4]
 80012a8:	699b      	ldr	r3, [r3, #24]
 80012aa:	2b01      	cmp	r3, #1
 80012ac:	d028      	beq.n	8001300 <HAL_RCC_OscConfig+0x4dc>
 80012ae:	68fb      	ldr	r3, [r7, #12]
 80012b0:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 80012b4:	687b      	ldr	r3, [r7, #4]
 80012b6:	69db      	ldr	r3, [r3, #28]
 80012b8:	429a      	cmp	r2, r3
 80012ba:	d121      	bne.n	8001300 <HAL_RCC_OscConfig+0x4dc>
 80012bc:	68fb      	ldr	r3, [r7, #12]
 80012be:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80012c2:	687b      	ldr	r3, [r7, #4]
 80012c4:	6a1b      	ldr	r3, [r3, #32]
 80012c6:	429a      	cmp	r2, r3
 80012c8:	d11a      	bne.n	8001300 <HAL_RCC_OscConfig+0x4dc>
 80012ca:	68fa      	ldr	r2, [r7, #12]
 80012cc:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80012d0:	4013      	ands	r3, r2
 80012d2:	687a      	ldr	r2, [r7, #4]
 80012d4:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80012d6:	0192      	lsls	r2, r2, #6
 80012d8:	4293      	cmp	r3, r2
 80012da:	d111      	bne.n	8001300 <HAL_RCC_OscConfig+0x4dc>
 80012dc:	68fb      	ldr	r3, [r7, #12]
 80012de:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80012e2:	687b      	ldr	r3, [r7, #4]
 80012e4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80012e6:	085b      	lsrs	r3, r3, #1
 80012e8:	3b01      	subs	r3, #1
 80012ea:	041b      	lsls	r3, r3, #16
 80012ec:	429a      	cmp	r2, r3
 80012ee:	d107      	bne.n	8001300 <HAL_RCC_OscConfig+0x4dc>
 80012f0:	68fb      	ldr	r3, [r7, #12]
 80012f2:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80012f6:	687b      	ldr	r3, [r7, #4]
 80012f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80012fa:	061b      	lsls	r3, r3, #24
 80012fc:	429a      	cmp	r2, r3
 80012fe:	d001      	beq.n	8001304 <HAL_RCC_OscConfig+0x4e0>
 8001300:	2301      	movs	r3, #1
 8001302:	e000      	b.n	8001306 <HAL_RCC_OscConfig+0x4e2>
 8001304:	2300      	movs	r3, #0
 8001306:	4618      	mov	r0, r3
 8001308:	3718      	adds	r7, #24
 800130a:	46bd      	mov	sp, r7
 800130c:	bd80      	pop	{r7, pc}
 800130e:	bf00      	nop
 8001310:	40023800 	.word	0x40023800

08001314 <HAL_RCC_ClockConfig>:
 8001314:	b580      	push	{r7, lr}
 8001316:	b084      	sub	sp, #16
 8001318:	af00      	add	r7, sp, #0
 800131a:	6078      	str	r0, [r7, #4]
 800131c:	6039      	str	r1, [r7, #0]
 800131e:	687b      	ldr	r3, [r7, #4]
 8001320:	2b00      	cmp	r3, #0
 8001322:	d101      	bne.n	8001328 <HAL_RCC_ClockConfig+0x14>
 8001324:	2301      	movs	r3, #1
 8001326:	e0cc      	b.n	80014c2 <HAL_RCC_ClockConfig+0x1ae>
 8001328:	4b68      	ldr	r3, [pc, #416]	@ (80014cc <HAL_RCC_ClockConfig+0x1b8>)
 800132a:	681b      	ldr	r3, [r3, #0]
 800132c:	f003 0307 	and.w	r3, r3, #7
 8001330:	683a      	ldr	r2, [r7, #0]
 8001332:	429a      	cmp	r2, r3
 8001334:	d90c      	bls.n	8001350 <HAL_RCC_ClockConfig+0x3c>
 8001336:	4b65      	ldr	r3, [pc, #404]	@ (80014cc <HAL_RCC_ClockConfig+0x1b8>)
 8001338:	683a      	ldr	r2, [r7, #0]
 800133a:	b2d2      	uxtb	r2, r2
 800133c:	701a      	strb	r2, [r3, #0]
 800133e:	4b63      	ldr	r3, [pc, #396]	@ (80014cc <HAL_RCC_ClockConfig+0x1b8>)
 8001340:	681b      	ldr	r3, [r3, #0]
 8001342:	f003 0307 	and.w	r3, r3, #7
 8001346:	683a      	ldr	r2, [r7, #0]
 8001348:	429a      	cmp	r2, r3
 800134a:	d001      	beq.n	8001350 <HAL_RCC_ClockConfig+0x3c>
 800134c:	2301      	movs	r3, #1
 800134e:	e0b8      	b.n	80014c2 <HAL_RCC_ClockConfig+0x1ae>
 8001350:	687b      	ldr	r3, [r7, #4]
 8001352:	681b      	ldr	r3, [r3, #0]
 8001354:	f003 0302 	and.w	r3, r3, #2
 8001358:	2b00      	cmp	r3, #0
 800135a:	d020      	beq.n	800139e <HAL_RCC_ClockConfig+0x8a>
 800135c:	687b      	ldr	r3, [r7, #4]
 800135e:	681b      	ldr	r3, [r3, #0]
 8001360:	f003 0304 	and.w	r3, r3, #4
 8001364:	2b00      	cmp	r3, #0
 8001366:	d005      	beq.n	8001374 <HAL_RCC_ClockConfig+0x60>
 8001368:	4b59      	ldr	r3, [pc, #356]	@ (80014d0 <HAL_RCC_ClockConfig+0x1bc>)
 800136a:	689b      	ldr	r3, [r3, #8]
 800136c:	4a58      	ldr	r2, [pc, #352]	@ (80014d0 <HAL_RCC_ClockConfig+0x1bc>)
 800136e:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8001372:	6093      	str	r3, [r2, #8]
 8001374:	687b      	ldr	r3, [r7, #4]
 8001376:	681b      	ldr	r3, [r3, #0]
 8001378:	f003 0308 	and.w	r3, r3, #8
 800137c:	2b00      	cmp	r3, #0
 800137e:	d005      	beq.n	800138c <HAL_RCC_ClockConfig+0x78>
 8001380:	4b53      	ldr	r3, [pc, #332]	@ (80014d0 <HAL_RCC_ClockConfig+0x1bc>)
 8001382:	689b      	ldr	r3, [r3, #8]
 8001384:	4a52      	ldr	r2, [pc, #328]	@ (80014d0 <HAL_RCC_ClockConfig+0x1bc>)
 8001386:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 800138a:	6093      	str	r3, [r2, #8]
 800138c:	4b50      	ldr	r3, [pc, #320]	@ (80014d0 <HAL_RCC_ClockConfig+0x1bc>)
 800138e:	689b      	ldr	r3, [r3, #8]
 8001390:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8001394:	687b      	ldr	r3, [r7, #4]
 8001396:	689b      	ldr	r3, [r3, #8]
 8001398:	494d      	ldr	r1, [pc, #308]	@ (80014d0 <HAL_RCC_ClockConfig+0x1bc>)
 800139a:	4313      	orrs	r3, r2
 800139c:	608b      	str	r3, [r1, #8]
 800139e:	687b      	ldr	r3, [r7, #4]
 80013a0:	681b      	ldr	r3, [r3, #0]
 80013a2:	f003 0301 	and.w	r3, r3, #1
 80013a6:	2b00      	cmp	r3, #0
 80013a8:	d044      	beq.n	8001434 <HAL_RCC_ClockConfig+0x120>
 80013aa:	687b      	ldr	r3, [r7, #4]
 80013ac:	685b      	ldr	r3, [r3, #4]
 80013ae:	2b01      	cmp	r3, #1
 80013b0:	d107      	bne.n	80013c2 <HAL_RCC_ClockConfig+0xae>
 80013b2:	4b47      	ldr	r3, [pc, #284]	@ (80014d0 <HAL_RCC_ClockConfig+0x1bc>)
 80013b4:	681b      	ldr	r3, [r3, #0]
 80013b6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80013ba:	2b00      	cmp	r3, #0
 80013bc:	d119      	bne.n	80013f2 <HAL_RCC_ClockConfig+0xde>
 80013be:	2301      	movs	r3, #1
 80013c0:	e07f      	b.n	80014c2 <HAL_RCC_ClockConfig+0x1ae>
 80013c2:	687b      	ldr	r3, [r7, #4]
 80013c4:	685b      	ldr	r3, [r3, #4]
 80013c6:	2b02      	cmp	r3, #2
 80013c8:	d003      	beq.n	80013d2 <HAL_RCC_ClockConfig+0xbe>
 80013ca:	687b      	ldr	r3, [r7, #4]
 80013cc:	685b      	ldr	r3, [r3, #4]
 80013ce:	2b03      	cmp	r3, #3
 80013d0:	d107      	bne.n	80013e2 <HAL_RCC_ClockConfig+0xce>
 80013d2:	4b3f      	ldr	r3, [pc, #252]	@ (80014d0 <HAL_RCC_ClockConfig+0x1bc>)
 80013d4:	681b      	ldr	r3, [r3, #0]
 80013d6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80013da:	2b00      	cmp	r3, #0
 80013dc:	d109      	bne.n	80013f2 <HAL_RCC_ClockConfig+0xde>
 80013de:	2301      	movs	r3, #1
 80013e0:	e06f      	b.n	80014c2 <HAL_RCC_ClockConfig+0x1ae>
 80013e2:	4b3b      	ldr	r3, [pc, #236]	@ (80014d0 <HAL_RCC_ClockConfig+0x1bc>)
 80013e4:	681b      	ldr	r3, [r3, #0]
 80013e6:	f003 0302 	and.w	r3, r3, #2
 80013ea:	2b00      	cmp	r3, #0
 80013ec:	d101      	bne.n	80013f2 <HAL_RCC_ClockConfig+0xde>
 80013ee:	2301      	movs	r3, #1
 80013f0:	e067      	b.n	80014c2 <HAL_RCC_ClockConfig+0x1ae>
 80013f2:	4b37      	ldr	r3, [pc, #220]	@ (80014d0 <HAL_RCC_ClockConfig+0x1bc>)
 80013f4:	689b      	ldr	r3, [r3, #8]
 80013f6:	f023 0203 	bic.w	r2, r3, #3
 80013fa:	687b      	ldr	r3, [r7, #4]
 80013fc:	685b      	ldr	r3, [r3, #4]
 80013fe:	4934      	ldr	r1, [pc, #208]	@ (80014d0 <HAL_RCC_ClockConfig+0x1bc>)
 8001400:	4313      	orrs	r3, r2
 8001402:	608b      	str	r3, [r1, #8]
 8001404:	f7ff fbf8 	bl	8000bf8 <HAL_GetTick>
 8001408:	60f8      	str	r0, [r7, #12]
 800140a:	e00a      	b.n	8001422 <HAL_RCC_ClockConfig+0x10e>
 800140c:	f7ff fbf4 	bl	8000bf8 <HAL_GetTick>
 8001410:	4602      	mov	r2, r0
 8001412:	68fb      	ldr	r3, [r7, #12]
 8001414:	1ad3      	subs	r3, r2, r3
 8001416:	f241 3288 	movw	r2, #5000	@ 0x1388
 800141a:	4293      	cmp	r3, r2
 800141c:	d901      	bls.n	8001422 <HAL_RCC_ClockConfig+0x10e>
 800141e:	2303      	movs	r3, #3
 8001420:	e04f      	b.n	80014c2 <HAL_RCC_ClockConfig+0x1ae>
 8001422:	4b2b      	ldr	r3, [pc, #172]	@ (80014d0 <HAL_RCC_ClockConfig+0x1bc>)
 8001424:	689b      	ldr	r3, [r3, #8]
 8001426:	f003 020c 	and.w	r2, r3, #12
 800142a:	687b      	ldr	r3, [r7, #4]
 800142c:	685b      	ldr	r3, [r3, #4]
 800142e:	009b      	lsls	r3, r3, #2
 8001430:	429a      	cmp	r2, r3
 8001432:	d1eb      	bne.n	800140c <HAL_RCC_ClockConfig+0xf8>
 8001434:	4b25      	ldr	r3, [pc, #148]	@ (80014cc <HAL_RCC_ClockConfig+0x1b8>)
 8001436:	681b      	ldr	r3, [r3, #0]
 8001438:	f003 0307 	and.w	r3, r3, #7
 800143c:	683a      	ldr	r2, [r7, #0]
 800143e:	429a      	cmp	r2, r3
 8001440:	d20c      	bcs.n	800145c <HAL_RCC_ClockConfig+0x148>
 8001442:	4b22      	ldr	r3, [pc, #136]	@ (80014cc <HAL_RCC_ClockConfig+0x1b8>)
 8001444:	683a      	ldr	r2, [r7, #0]
 8001446:	b2d2      	uxtb	r2, r2
 8001448:	701a      	strb	r2, [r3, #0]
 800144a:	4b20      	ldr	r3, [pc, #128]	@ (80014cc <HAL_RCC_ClockConfig+0x1b8>)
 800144c:	681b      	ldr	r3, [r3, #0]
 800144e:	f003 0307 	and.w	r3, r3, #7
 8001452:	683a      	ldr	r2, [r7, #0]
 8001454:	429a      	cmp	r2, r3
 8001456:	d001      	beq.n	800145c <HAL_RCC_ClockConfig+0x148>
 8001458:	2301      	movs	r3, #1
 800145a:	e032      	b.n	80014c2 <HAL_RCC_ClockConfig+0x1ae>
 800145c:	687b      	ldr	r3, [r7, #4]
 800145e:	681b      	ldr	r3, [r3, #0]
 8001460:	f003 0304 	and.w	r3, r3, #4
 8001464:	2b00      	cmp	r3, #0
 8001466:	d008      	beq.n	800147a <HAL_RCC_ClockConfig+0x166>
 8001468:	4b19      	ldr	r3, [pc, #100]	@ (80014d0 <HAL_RCC_ClockConfig+0x1bc>)
 800146a:	689b      	ldr	r3, [r3, #8]
 800146c:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8001470:	687b      	ldr	r3, [r7, #4]
 8001472:	68db      	ldr	r3, [r3, #12]
 8001474:	4916      	ldr	r1, [pc, #88]	@ (80014d0 <HAL_RCC_ClockConfig+0x1bc>)
 8001476:	4313      	orrs	r3, r2
 8001478:	608b      	str	r3, [r1, #8]
 800147a:	687b      	ldr	r3, [r7, #4]
 800147c:	681b      	ldr	r3, [r3, #0]
 800147e:	f003 0308 	and.w	r3, r3, #8
 8001482:	2b00      	cmp	r3, #0
 8001484:	d009      	beq.n	800149a <HAL_RCC_ClockConfig+0x186>
 8001486:	4b12      	ldr	r3, [pc, #72]	@ (80014d0 <HAL_RCC_ClockConfig+0x1bc>)
 8001488:	689b      	ldr	r3, [r3, #8]
 800148a:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 800148e:	687b      	ldr	r3, [r7, #4]
 8001490:	691b      	ldr	r3, [r3, #16]
 8001492:	00db      	lsls	r3, r3, #3
 8001494:	490e      	ldr	r1, [pc, #56]	@ (80014d0 <HAL_RCC_ClockConfig+0x1bc>)
 8001496:	4313      	orrs	r3, r2
 8001498:	608b      	str	r3, [r1, #8]
 800149a:	f000 f821 	bl	80014e0 <HAL_RCC_GetSysClockFreq>
 800149e:	4602      	mov	r2, r0
 80014a0:	4b0b      	ldr	r3, [pc, #44]	@ (80014d0 <HAL_RCC_ClockConfig+0x1bc>)
 80014a2:	689b      	ldr	r3, [r3, #8]
 80014a4:	091b      	lsrs	r3, r3, #4
 80014a6:	f003 030f 	and.w	r3, r3, #15
 80014aa:	490a      	ldr	r1, [pc, #40]	@ (80014d4 <HAL_RCC_ClockConfig+0x1c0>)
 80014ac:	5ccb      	ldrb	r3, [r1, r3]
 80014ae:	fa22 f303 	lsr.w	r3, r2, r3
 80014b2:	4a09      	ldr	r2, [pc, #36]	@ (80014d8 <HAL_RCC_ClockConfig+0x1c4>)
 80014b4:	6013      	str	r3, [r2, #0]
 80014b6:	4b09      	ldr	r3, [pc, #36]	@ (80014dc <HAL_RCC_ClockConfig+0x1c8>)
 80014b8:	681b      	ldr	r3, [r3, #0]
 80014ba:	4618      	mov	r0, r3
 80014bc:	f7ff fb58 	bl	8000b70 <HAL_InitTick>
 80014c0:	2300      	movs	r3, #0
 80014c2:	4618      	mov	r0, r3
 80014c4:	3710      	adds	r7, #16
 80014c6:	46bd      	mov	sp, r7
 80014c8:	bd80      	pop	{r7, pc}
 80014ca:	bf00      	nop
 80014cc:	40023c00 	.word	0x40023c00
 80014d0:	40023800 	.word	0x40023800
 80014d4:	08001808 	.word	0x08001808
 80014d8:	20000000 	.word	0x20000000
 80014dc:	20000004 	.word	0x20000004

080014e0 <HAL_RCC_GetSysClockFreq>:
 80014e0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80014e4:	b090      	sub	sp, #64	@ 0x40
 80014e6:	af00      	add	r7, sp, #0
 80014e8:	2300      	movs	r3, #0
 80014ea:	637b      	str	r3, [r7, #52]	@ 0x34
 80014ec:	2300      	movs	r3, #0
 80014ee:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80014f0:	2300      	movs	r3, #0
 80014f2:	633b      	str	r3, [r7, #48]	@ 0x30
 80014f4:	2300      	movs	r3, #0
 80014f6:	63bb      	str	r3, [r7, #56]	@ 0x38
 80014f8:	4b59      	ldr	r3, [pc, #356]	@ (8001660 <HAL_RCC_GetSysClockFreq+0x180>)
 80014fa:	689b      	ldr	r3, [r3, #8]
 80014fc:	f003 030c 	and.w	r3, r3, #12
 8001500:	2b08      	cmp	r3, #8
 8001502:	d00d      	beq.n	8001520 <HAL_RCC_GetSysClockFreq+0x40>
 8001504:	2b08      	cmp	r3, #8
 8001506:	f200 80a1 	bhi.w	800164c <HAL_RCC_GetSysClockFreq+0x16c>
 800150a:	2b00      	cmp	r3, #0
 800150c:	d002      	beq.n	8001514 <HAL_RCC_GetSysClockFreq+0x34>
 800150e:	2b04      	cmp	r3, #4
 8001510:	d003      	beq.n	800151a <HAL_RCC_GetSysClockFreq+0x3a>
 8001512:	e09b      	b.n	800164c <HAL_RCC_GetSysClockFreq+0x16c>
 8001514:	4b53      	ldr	r3, [pc, #332]	@ (8001664 <HAL_RCC_GetSysClockFreq+0x184>)
 8001516:	63bb      	str	r3, [r7, #56]	@ 0x38
 8001518:	e09b      	b.n	8001652 <HAL_RCC_GetSysClockFreq+0x172>
 800151a:	4b53      	ldr	r3, [pc, #332]	@ (8001668 <HAL_RCC_GetSysClockFreq+0x188>)
 800151c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800151e:	e098      	b.n	8001652 <HAL_RCC_GetSysClockFreq+0x172>
 8001520:	4b4f      	ldr	r3, [pc, #316]	@ (8001660 <HAL_RCC_GetSysClockFreq+0x180>)
 8001522:	685b      	ldr	r3, [r3, #4]
 8001524:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8001528:	637b      	str	r3, [r7, #52]	@ 0x34
 800152a:	4b4d      	ldr	r3, [pc, #308]	@ (8001660 <HAL_RCC_GetSysClockFreq+0x180>)
 800152c:	685b      	ldr	r3, [r3, #4]
 800152e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001532:	2b00      	cmp	r3, #0
 8001534:	d028      	beq.n	8001588 <HAL_RCC_GetSysClockFreq+0xa8>
 8001536:	4b4a      	ldr	r3, [pc, #296]	@ (8001660 <HAL_RCC_GetSysClockFreq+0x180>)
 8001538:	685b      	ldr	r3, [r3, #4]
 800153a:	099b      	lsrs	r3, r3, #6
 800153c:	2200      	movs	r2, #0
 800153e:	623b      	str	r3, [r7, #32]
 8001540:	627a      	str	r2, [r7, #36]	@ 0x24
 8001542:	6a3b      	ldr	r3, [r7, #32]
 8001544:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8001548:	2100      	movs	r1, #0
 800154a:	4b47      	ldr	r3, [pc, #284]	@ (8001668 <HAL_RCC_GetSysClockFreq+0x188>)
 800154c:	fb03 f201 	mul.w	r2, r3, r1
 8001550:	2300      	movs	r3, #0
 8001552:	fb00 f303 	mul.w	r3, r0, r3
 8001556:	4413      	add	r3, r2
 8001558:	4a43      	ldr	r2, [pc, #268]	@ (8001668 <HAL_RCC_GetSysClockFreq+0x188>)
 800155a:	fba0 1202 	umull	r1, r2, r0, r2
 800155e:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8001560:	460a      	mov	r2, r1
 8001562:	62ba      	str	r2, [r7, #40]	@ 0x28
 8001564:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8001566:	4413      	add	r3, r2
 8001568:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800156a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800156c:	2200      	movs	r2, #0
 800156e:	61bb      	str	r3, [r7, #24]
 8001570:	61fa      	str	r2, [r7, #28]
 8001572:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8001576:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 800157a:	f7fe fe2b 	bl	80001d4 <__aeabi_uldivmod>
 800157e:	4602      	mov	r2, r0
 8001580:	460b      	mov	r3, r1
 8001582:	4613      	mov	r3, r2
 8001584:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8001586:	e053      	b.n	8001630 <HAL_RCC_GetSysClockFreq+0x150>
 8001588:	4b35      	ldr	r3, [pc, #212]	@ (8001660 <HAL_RCC_GetSysClockFreq+0x180>)
 800158a:	685b      	ldr	r3, [r3, #4]
 800158c:	099b      	lsrs	r3, r3, #6
 800158e:	2200      	movs	r2, #0
 8001590:	613b      	str	r3, [r7, #16]
 8001592:	617a      	str	r2, [r7, #20]
 8001594:	693b      	ldr	r3, [r7, #16]
 8001596:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 800159a:	f04f 0b00 	mov.w	fp, #0
 800159e:	4652      	mov	r2, sl
 80015a0:	465b      	mov	r3, fp
 80015a2:	f04f 0000 	mov.w	r0, #0
 80015a6:	f04f 0100 	mov.w	r1, #0
 80015aa:	0159      	lsls	r1, r3, #5
 80015ac:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80015b0:	0150      	lsls	r0, r2, #5
 80015b2:	4602      	mov	r2, r0
 80015b4:	460b      	mov	r3, r1
 80015b6:	ebb2 080a 	subs.w	r8, r2, sl
 80015ba:	eb63 090b 	sbc.w	r9, r3, fp
 80015be:	f04f 0200 	mov.w	r2, #0
 80015c2:	f04f 0300 	mov.w	r3, #0
 80015c6:	ea4f 1389 	mov.w	r3, r9, lsl #6
 80015ca:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 80015ce:	ea4f 1288 	mov.w	r2, r8, lsl #6
 80015d2:	ebb2 0408 	subs.w	r4, r2, r8
 80015d6:	eb63 0509 	sbc.w	r5, r3, r9
 80015da:	f04f 0200 	mov.w	r2, #0
 80015de:	f04f 0300 	mov.w	r3, #0
 80015e2:	00eb      	lsls	r3, r5, #3
 80015e4:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80015e8:	00e2      	lsls	r2, r4, #3
 80015ea:	4614      	mov	r4, r2
 80015ec:	461d      	mov	r5, r3
 80015ee:	eb14 030a 	adds.w	r3, r4, sl
 80015f2:	603b      	str	r3, [r7, #0]
 80015f4:	eb45 030b 	adc.w	r3, r5, fp
 80015f8:	607b      	str	r3, [r7, #4]
 80015fa:	f04f 0200 	mov.w	r2, #0
 80015fe:	f04f 0300 	mov.w	r3, #0
 8001602:	e9d7 4500 	ldrd	r4, r5, [r7]
 8001606:	4629      	mov	r1, r5
 8001608:	028b      	lsls	r3, r1, #10
 800160a:	4621      	mov	r1, r4
 800160c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8001610:	4621      	mov	r1, r4
 8001612:	028a      	lsls	r2, r1, #10
 8001614:	4610      	mov	r0, r2
 8001616:	4619      	mov	r1, r3
 8001618:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800161a:	2200      	movs	r2, #0
 800161c:	60bb      	str	r3, [r7, #8]
 800161e:	60fa      	str	r2, [r7, #12]
 8001620:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8001624:	f7fe fdd6 	bl	80001d4 <__aeabi_uldivmod>
 8001628:	4602      	mov	r2, r0
 800162a:	460b      	mov	r3, r1
 800162c:	4613      	mov	r3, r2
 800162e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8001630:	4b0b      	ldr	r3, [pc, #44]	@ (8001660 <HAL_RCC_GetSysClockFreq+0x180>)
 8001632:	685b      	ldr	r3, [r3, #4]
 8001634:	0c1b      	lsrs	r3, r3, #16
 8001636:	f003 0303 	and.w	r3, r3, #3
 800163a:	3301      	adds	r3, #1
 800163c:	005b      	lsls	r3, r3, #1
 800163e:	633b      	str	r3, [r7, #48]	@ 0x30
 8001640:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8001642:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001644:	fbb2 f3f3 	udiv	r3, r2, r3
 8001648:	63bb      	str	r3, [r7, #56]	@ 0x38
 800164a:	e002      	b.n	8001652 <HAL_RCC_GetSysClockFreq+0x172>
 800164c:	4b05      	ldr	r3, [pc, #20]	@ (8001664 <HAL_RCC_GetSysClockFreq+0x184>)
 800164e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8001650:	bf00      	nop
 8001652:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001654:	4618      	mov	r0, r3
 8001656:	3740      	adds	r7, #64	@ 0x40
 8001658:	46bd      	mov	sp, r7
 800165a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800165e:	bf00      	nop
 8001660:	40023800 	.word	0x40023800
 8001664:	00f42400 	.word	0x00f42400
 8001668:	017d7840 	.word	0x017d7840

0800166c <atoi>:
 800166c:	220a      	movs	r2, #10
 800166e:	2100      	movs	r1, #0
 8001670:	f000 b87a 	b.w	8001768 <strtol>

08001674 <_strtol_l.constprop.0>:
 8001674:	2b24      	cmp	r3, #36	@ 0x24
 8001676:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800167a:	4686      	mov	lr, r0
 800167c:	4690      	mov	r8, r2
 800167e:	d801      	bhi.n	8001684 <_strtol_l.constprop.0+0x10>
 8001680:	2b01      	cmp	r3, #1
 8001682:	d106      	bne.n	8001692 <_strtol_l.constprop.0+0x1e>
 8001684:	f000 f882 	bl	800178c <__errno>
 8001688:	2316      	movs	r3, #22
 800168a:	6003      	str	r3, [r0, #0]
 800168c:	2000      	movs	r0, #0
 800168e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001692:	4834      	ldr	r0, [pc, #208]	@ (8001764 <_strtol_l.constprop.0+0xf0>)
 8001694:	460d      	mov	r5, r1
 8001696:	462a      	mov	r2, r5
 8001698:	f815 4b01 	ldrb.w	r4, [r5], #1
 800169c:	5d06      	ldrb	r6, [r0, r4]
 800169e:	f016 0608 	ands.w	r6, r6, #8
 80016a2:	d1f8      	bne.n	8001696 <_strtol_l.constprop.0+0x22>
 80016a4:	2c2d      	cmp	r4, #45	@ 0x2d
 80016a6:	d12d      	bne.n	8001704 <_strtol_l.constprop.0+0x90>
 80016a8:	782c      	ldrb	r4, [r5, #0]
 80016aa:	2601      	movs	r6, #1
 80016ac:	1c95      	adds	r5, r2, #2
 80016ae:	f033 0210 	bics.w	r2, r3, #16
 80016b2:	d109      	bne.n	80016c8 <_strtol_l.constprop.0+0x54>
 80016b4:	2c30      	cmp	r4, #48	@ 0x30
 80016b6:	d12a      	bne.n	800170e <_strtol_l.constprop.0+0x9a>
 80016b8:	782a      	ldrb	r2, [r5, #0]
 80016ba:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 80016be:	2a58      	cmp	r2, #88	@ 0x58
 80016c0:	d125      	bne.n	800170e <_strtol_l.constprop.0+0x9a>
 80016c2:	786c      	ldrb	r4, [r5, #1]
 80016c4:	2310      	movs	r3, #16
 80016c6:	3502      	adds	r5, #2
 80016c8:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 80016cc:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
 80016d0:	2200      	movs	r2, #0
 80016d2:	fbbc f9f3 	udiv	r9, ip, r3
 80016d6:	4610      	mov	r0, r2
 80016d8:	fb03 ca19 	mls	sl, r3, r9, ip
 80016dc:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 80016e0:	2f09      	cmp	r7, #9
 80016e2:	d81b      	bhi.n	800171c <_strtol_l.constprop.0+0xa8>
 80016e4:	463c      	mov	r4, r7
 80016e6:	42a3      	cmp	r3, r4
 80016e8:	dd27      	ble.n	800173a <_strtol_l.constprop.0+0xc6>
 80016ea:	1c57      	adds	r7, r2, #1
 80016ec:	d007      	beq.n	80016fe <_strtol_l.constprop.0+0x8a>
 80016ee:	4581      	cmp	r9, r0
 80016f0:	d320      	bcc.n	8001734 <_strtol_l.constprop.0+0xc0>
 80016f2:	d101      	bne.n	80016f8 <_strtol_l.constprop.0+0x84>
 80016f4:	45a2      	cmp	sl, r4
 80016f6:	db1d      	blt.n	8001734 <_strtol_l.constprop.0+0xc0>
 80016f8:	fb00 4003 	mla	r0, r0, r3, r4
 80016fc:	2201      	movs	r2, #1
 80016fe:	f815 4b01 	ldrb.w	r4, [r5], #1
 8001702:	e7eb      	b.n	80016dc <_strtol_l.constprop.0+0x68>
 8001704:	2c2b      	cmp	r4, #43	@ 0x2b
 8001706:	bf04      	itt	eq
 8001708:	782c      	ldrbeq	r4, [r5, #0]
 800170a:	1c95      	addeq	r5, r2, #2
 800170c:	e7cf      	b.n	80016ae <_strtol_l.constprop.0+0x3a>
 800170e:	2b00      	cmp	r3, #0
 8001710:	d1da      	bne.n	80016c8 <_strtol_l.constprop.0+0x54>
 8001712:	2c30      	cmp	r4, #48	@ 0x30
 8001714:	bf0c      	ite	eq
 8001716:	2308      	moveq	r3, #8
 8001718:	230a      	movne	r3, #10
 800171a:	e7d5      	b.n	80016c8 <_strtol_l.constprop.0+0x54>
 800171c:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8001720:	2f19      	cmp	r7, #25
 8001722:	d801      	bhi.n	8001728 <_strtol_l.constprop.0+0xb4>
 8001724:	3c37      	subs	r4, #55	@ 0x37
 8001726:	e7de      	b.n	80016e6 <_strtol_l.constprop.0+0x72>
 8001728:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 800172c:	2f19      	cmp	r7, #25
 800172e:	d804      	bhi.n	800173a <_strtol_l.constprop.0+0xc6>
 8001730:	3c57      	subs	r4, #87	@ 0x57
 8001732:	e7d8      	b.n	80016e6 <_strtol_l.constprop.0+0x72>
 8001734:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8001738:	e7e1      	b.n	80016fe <_strtol_l.constprop.0+0x8a>
 800173a:	1c53      	adds	r3, r2, #1
 800173c:	d108      	bne.n	8001750 <_strtol_l.constprop.0+0xdc>
 800173e:	2322      	movs	r3, #34	@ 0x22
 8001740:	f8ce 3000 	str.w	r3, [lr]
 8001744:	4660      	mov	r0, ip
 8001746:	f1b8 0f00 	cmp.w	r8, #0
 800174a:	d0a0      	beq.n	800168e <_strtol_l.constprop.0+0x1a>
 800174c:	1e69      	subs	r1, r5, #1
 800174e:	e006      	b.n	800175e <_strtol_l.constprop.0+0xea>
 8001750:	b106      	cbz	r6, 8001754 <_strtol_l.constprop.0+0xe0>
 8001752:	4240      	negs	r0, r0
 8001754:	f1b8 0f00 	cmp.w	r8, #0
 8001758:	d099      	beq.n	800168e <_strtol_l.constprop.0+0x1a>
 800175a:	2a00      	cmp	r2, #0
 800175c:	d1f6      	bne.n	800174c <_strtol_l.constprop.0+0xd8>
 800175e:	f8c8 1000 	str.w	r1, [r8]
 8001762:	e794      	b.n	800168e <_strtol_l.constprop.0+0x1a>
 8001764:	08001819 	.word	0x08001819

08001768 <strtol>:
 8001768:	4613      	mov	r3, r2
 800176a:	460a      	mov	r2, r1
 800176c:	4601      	mov	r1, r0
 800176e:	4802      	ldr	r0, [pc, #8]	@ (8001778 <strtol+0x10>)
 8001770:	6800      	ldr	r0, [r0, #0]
 8001772:	f7ff bf7f 	b.w	8001674 <_strtol_l.constprop.0>
 8001776:	bf00      	nop
 8001778:	2000000c 	.word	0x2000000c

0800177c <memset>:
 800177c:	4402      	add	r2, r0
 800177e:	4603      	mov	r3, r0
 8001780:	4293      	cmp	r3, r2
 8001782:	d100      	bne.n	8001786 <memset+0xa>
 8001784:	4770      	bx	lr
 8001786:	f803 1b01 	strb.w	r1, [r3], #1
 800178a:	e7f9      	b.n	8001780 <memset+0x4>

0800178c <__errno>:
 800178c:	4b01      	ldr	r3, [pc, #4]	@ (8001794 <__errno+0x8>)
 800178e:	6818      	ldr	r0, [r3, #0]
 8001790:	4770      	bx	lr
 8001792:	bf00      	nop
 8001794:	2000000c 	.word	0x2000000c

08001798 <__libc_init_array>:
 8001798:	b570      	push	{r4, r5, r6, lr}
 800179a:	4d0d      	ldr	r5, [pc, #52]	@ (80017d0 <__libc_init_array+0x38>)
 800179c:	4c0d      	ldr	r4, [pc, #52]	@ (80017d4 <__libc_init_array+0x3c>)
 800179e:	1b64      	subs	r4, r4, r5
 80017a0:	10a4      	asrs	r4, r4, #2
 80017a2:	2600      	movs	r6, #0
 80017a4:	42a6      	cmp	r6, r4
 80017a6:	d109      	bne.n	80017bc <__libc_init_array+0x24>
 80017a8:	4d0b      	ldr	r5, [pc, #44]	@ (80017d8 <__libc_init_array+0x40>)
 80017aa:	4c0c      	ldr	r4, [pc, #48]	@ (80017dc <__libc_init_array+0x44>)
 80017ac:	f000 f818 	bl	80017e0 <_init>
 80017b0:	1b64      	subs	r4, r4, r5
 80017b2:	10a4      	asrs	r4, r4, #2
 80017b4:	2600      	movs	r6, #0
 80017b6:	42a6      	cmp	r6, r4
 80017b8:	d105      	bne.n	80017c6 <__libc_init_array+0x2e>
 80017ba:	bd70      	pop	{r4, r5, r6, pc}
 80017bc:	f855 3b04 	ldr.w	r3, [r5], #4
 80017c0:	4798      	blx	r3
 80017c2:	3601      	adds	r6, #1
 80017c4:	e7ee      	b.n	80017a4 <__libc_init_array+0xc>
 80017c6:	f855 3b04 	ldr.w	r3, [r5], #4
 80017ca:	4798      	blx	r3
 80017cc:	3601      	adds	r6, #1
 80017ce:	e7f2      	b.n	80017b6 <__libc_init_array+0x1e>
 80017d0:	08001924 	.word	0x08001924
 80017d4:	08001924 	.word	0x08001924
 80017d8:	08001924 	.word	0x08001924
 80017dc:	08001928 	.word	0x08001928

080017e0 <_init>:
 80017e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80017e2:	bf00      	nop
 80017e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80017e6:	bc08      	pop	{r3}
 80017e8:	469e      	mov	lr, r3
 80017ea:	4770      	bx	lr

080017ec <_fini>:
 80017ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80017ee:	bf00      	nop
 80017f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80017f2:	bc08      	pop	{r3}
 80017f4:	469e      	mov	lr, r3
 80017f6:	4770      	bx	lr
